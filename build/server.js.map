{"version":3,"sources":["webpack:///webpack/bootstrap 35b11a88a41599d08229","webpack:///./src/shared/log.ts","webpack:///./src/shared/log/LogLevel.ts","webpack:///./src/server/Server.ts","webpack:///./src/server/web.ts","webpack:///./src/server/web/Webserver.ts","webpack:///./src/server/web/index.html","webpack:///external \"http\"","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///./src/shared/log/Log.ts","webpack:///./src/server/network.ts","webpack:///./src/server/network/NetworkServer.ts","webpack:///external \"socket.io\""],"names":[],"mappings":"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","file":"./build/server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 35b11a88a41599d08229","export * from './log/LogLevel';\r\nexport * from './log/Log';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log.ts","/**\r\n * a basic loglevel categorisation\r\n */\r\nexport enum LogLevel {\r\n    Debug, Info, Warning, Error\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log/LogLevel.ts","import { Webserver } from 'server/web';\r\nimport { NetworkServer } from 'server/network';\r\nimport { ServerConfig } from 'ServerConfig';\r\nimport { LogLevel, Log } from 'shared/log';\r\n\r\n/**\r\n * the game server main class. loads all important things\r\n * and also provides a buildin webserver to serve the app\r\n */\r\nexport class Server {\r\n\r\n    private webserver: Webserver;\r\n    private network: NetworkServer;\r\n\r\n    constructor(\r\n        private serverConfig: ServerConfig\r\n    ) {\r\n\r\n        // set the log level\r\n        Log.setLogLevel(serverConfig.logLevel);\r\n\r\n        // start the webserver\r\n        this.webserver = new Webserver(\r\n            serverConfig.webAdress,\r\n            serverConfig.webPort\r\n        );\r\n\r\n        // start network\r\n        this.network = new NetworkServer(\r\n            this.webserver.getApplication()\r\n        );\r\n    }\r\n}\r\n\r\n// start the webserver\r\nnew Server({\r\n    webAdress: '127.0.0.1',\r\n    webPort: 3000,\r\n    logLevel: LogLevel.Debug\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/server/Server.ts","export * from './web/Webserver';\n\n\n// WEBPACK FOOTER //\n// ./src/server/web.ts","// need the index file in the build directory\r\nrequire('file-loader?name=build/[name].[ext]!./index.html');\r\n\r\nimport * as http from 'http';\r\nimport * as express from 'express';\r\nimport * as path from 'path';\r\n\r\nimport { Log } from 'shared/log';\r\n\r\n/**\r\n * the buildin webserver to serve the client\r\n */\r\nexport class Webserver {\r\n\r\n    private app: any;\r\n    private httpServer: http.Server;\r\n\r\n    constructor(\r\n        listenAdress: string = \"127.0.0.1\",\r\n        port: number = 3000,\r\n        app: express.Application = express()\r\n    ) {\r\n        // setup server\r\n        this.httpServer = http.createServer(app);\r\n\r\n        // start listening\r\n        this.httpServer.listen(port, listenAdress);\r\n        Log.info(\"Listening at \", `${listenAdress}:${port}`);\r\n\r\n        // handle http calls\r\n        app.get('/*', this.serveApplication.bind(this));\r\n    }\r\n\r\n    /**\r\n     * handles incomming file calls\r\n     *\r\n     * @param request\r\n     * @param response\r\n     */\r\n    private serveApplication(\r\n        request: any, response: any\r\n    ): void {\r\n\r\n        // get the requested file from the request object\r\n        let file = request.url;\r\n        if (file === \"/\")\r\n            file = \"index.html\";\r\n\r\n        // @todo: do not serve the server.js file for security reasons!\r\n        // get the file and send it back to the client\r\n        let absolutePath = path.resolve(`./build/${file}`);\r\n        response.sendFile(absolutePath);\r\n    }\r\n\r\n    /**\r\n     * gets the current express application\r\n     *\r\n     * @return the passed through app at constructing time or a newly created app if no parameter was given during constructing\r\n     */\r\n    public getApplication(): express.Application {\r\n\r\n        return this.app;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/server/web/Webserver.ts","module.exports = __webpack_public_path__ + \"build/index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-loader?name=build/[name].[ext]!./src/server/web/index.html\n// module id = 5\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 8\n// module chunks = 0","import { LogLevel } from './LogLevel';\r\n\r\n/**\r\n * a log wrapper to allow log levels and a more complex\r\n * logging structure\r\n */\r\nexport class Log {\r\n\r\n    // the current loglevel\r\n    private static logLevel: LogLevel = LogLevel.Debug;\r\n\r\n    /**\r\n     * sets the log level for the application environment\r\n     *\r\n     * @param level the new log level\r\n     */\r\n    public static setLogLevel(level: LogLevel): void {\r\n\r\n        Log.logLevel = level;\r\n    }\r\n\r\n    /**\r\n     * logs the given data\r\n     *\r\n     * @param level the level to log in\r\n     * @param params all params as vararg array\r\n     */\r\n    public static log(level: LogLevel, ...params: any[]): void {\r\n\r\n        // log if the log level is ok\r\n        if (parseInt(<any>level) >= parseInt(<any>Log.logLevel)) {\r\n\r\n            // level ok, log\r\n            Log.getLogFunctionByLevel(level)(\r\n                `[Log.${LogLevel[level]}]`, ...params\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets a callback function to log\r\n     *\r\n     * @param level the level to get the function from\r\n     */\r\n    private static getLogFunctionByLevel(level: LogLevel): Function {\r\n\r\n        let callback = () => { };\r\n\r\n        // go through the different log levels\r\n        switch (level) {\r\n\r\n            case LogLevel.Debug: callback = console.debug; break;\r\n            case LogLevel.Info: callback = console.info; break;\r\n            case LogLevel.Warning: callback = console.warn; break;\r\n            case LogLevel.Error: callback = console.error; break;\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * logs as debug level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static debug(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Debug, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as info level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static info(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Info, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as warning level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static warning(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Warning, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as error level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static error(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Error, ...params);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log/Log.ts","export * from './network/NetworkServer';\n\n\n// WEBPACK FOOTER //\n// ./src/server/network.ts","import * as express from 'express';\r\nimport * as socketio from 'socket.io';\r\n\r\nimport { Log } from 'shared/log';\r\n\r\n/**\r\n * the network base to use a client-server based structure\r\n * with websocket as transport protocol\r\n */\r\nexport class NetworkServer {\r\n\r\n    /**\r\n     * the servers socket\r\n     */\r\n    private socket: SocketIO.Server;\r\n\r\n    /**\r\n     *\r\n     * @param application the application to bind the websocket\r\n     */\r\n    constructor(\r\n        private application: express.Application\r\n    ) {\r\n\r\n\r\n        this.bindWebsocketToApplication();\r\n    }\r\n\r\n    /**\r\n     * binds a websocket to the applications router\r\n     */\r\n    private bindWebsocketToApplication(): void {\r\n\r\n        // init websocket and bind to application\r\n        this.socket = socketio(this.application);\r\n        Log.info(\"Websocket started\");\r\n    }\r\n\r\n    /**\r\n     * binds a callback function to an event of socketio\r\n     *\r\n     * @param eventName the event name you choose between server and client\r\n     * @param callback a function executed on event occur\r\n     */\r\n    public bindEvent(eventName: string, callback: Function): void {\r\n\r\n        // pass this to socketio\r\n        this.socket.on(eventName, callback);\r\n    }\r\n\r\n    /**\r\n     * bind a callback to a new connecting player\r\n     *\r\n     * @param callback the handler function\r\n     */\r\n    public bindNewConnectionEvent(callback: (socket: SocketIO.Socket) => void): void {\r\n\r\n        // pass this event to socketio\r\n        this.socket.on(\"connection\", callback);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/server/network/NetworkServer.ts","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}