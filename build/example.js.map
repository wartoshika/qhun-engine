{"version":3,"sources":["webpack:///webpack/bootstrap c64d1ab33e8d1927242f","webpack:///./src/shared/math.ts","webpack:///./src/client/asset/AssetType.ts","webpack:///./src/shared/log.ts","webpack:///./src/shared/helper.ts","webpack:///./src/shared/storage.ts","webpack:///./src/client/asset.ts","webpack:///./src/client/asset/AbstractAsset.ts","webpack:///./src/shared/decorator.ts","webpack:///./src/shared/log/LogLevel.ts","webpack:///./src/client/Game.ts","webpack:///./src/shared/math/Helper.ts","webpack:///./src/shared/math/Dimension.ts","webpack:///./src/shared/helper/File.ts","webpack:///./src/client/entity.ts","webpack:///./src/client/entity/Entity.ts","webpack:///./src/client/entity/AnimationEntity.ts","webpack:///./src/shared/entity/Entity.ts","webpack:///./src/client/scene.ts","webpack:///./src/client/scene/Scene.ts","webpack:///./src/client/asset/Image.ts","webpack:///./src/client/asset/AssetLoader.ts","webpack:///./src/client/network.ts","webpack:///./src/client/render/BasicRenderer.ts","webpack:///./src/example/Example.ts","webpack:///./src/client/Client.ts","webpack:///./src/shared/decorator/logMethodCall.ts","webpack:///./src/shared/log/Log.ts","webpack:///./src/shared/helper/Singleton.ts","webpack:///./src/shared/storage/RamStorage.ts","webpack:///./node_modules/object-sizeof/index.js","webpack:///./node_modules/object-sizeof/byte_size.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/shared/math/Vector2D.ts","webpack:///./src/shared/helper/Binary.ts","webpack:///./src/shared/entity.ts","webpack:///./src/shared/entity/CollidableEntity.ts","webpack:///./src/client/entity/Animation.ts","webpack:///./src/client/entity/CollidableEntity.ts","webpack:///./src/client/camera.ts","webpack:///./src/client/camera/Camera.ts","webpack:///./src/client/scene/LoadingScreenScene.ts","webpack:///./src/client/network/Request.ts","webpack:///./src/client/asset/Sprite.ts","webpack:///./src/client/asset/Sound.ts","webpack:///./src/client/input.ts","webpack:///./src/client/input/Input.ts","webpack:///./src/client/render.ts","webpack:///./src/client/render/CanvasRenderer.ts","webpack:///./src/client/environment.ts","webpack:///./src/client/environment/Viewport.ts","webpack:///./src/example/entity/Player.ts","webpack:///./src/shared/collision.ts","webpack:///./src/shared/collision/CollisionType.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AAC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","file":"./build/example.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c64d1ab33e8d1927242f","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './math/Helper';\r\nexport * from './math/Vector2D';\r\nexport * from './math/Dimension';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/math.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * an enumeration of loadable assets via AssetLoader\r\n */\r\nexport enum AssetType {\r\n    Image,\r\n    Audio,\r\n    Json\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/AssetType.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './log/LogLevel';\r\nexport * from './log/Log';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './helper/Singleton';\r\nexport * from './helper/Binary';\r\nexport * from './helper/File';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/helper.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './storage/RamStorage';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/storage.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './asset/Image';\r\nexport * from './asset/Sprite';\r\nexport * from './asset/Sound';\r\nexport * from './asset/AssetType';\r\nexport * from './asset/AssetLoader';\r\nexport * from './asset/Asset';\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Asset } from './Asset';\r\nimport { AssetType } from './AssetType';\r\nimport { AssetLoader } from './AssetLoader';\r\n\r\n/**\r\n * a basic class for implementing the getter and setter function\r\n * of the required asset interface\r\n */\r\nexport abstract class AbstractAsset implements Asset {\r\n\r\n    /**\r\n     * holder of the asset loader\r\n     */\r\n    private static assetLoader = AssetLoader.getInstance<AssetLoader>();\r\n\r\n    constructor(\r\n        protected name?: string,\r\n        protected path?: string,\r\n        protected type?: AssetType,\r\n        protected data?: any\r\n    ) { }\r\n\r\n    /**\r\n     * get the asset loader instance to load the desired asset\r\n     */\r\n    protected static getAssetLoader(): AssetLoader {\r\n\r\n        return AbstractAsset.assetLoader;\r\n    }\r\n\r\n    public getName(): string {\r\n\r\n        return this.name;\r\n    }\r\n\r\n    public getPath(): string {\r\n\r\n        return this.path;\r\n    }\r\n\r\n    public getAssetType(): AssetType {\r\n\r\n        return this.type;\r\n    }\r\n\r\n    public getData(): any {\r\n\r\n        return this.data;\r\n    }\r\n\r\n    public setName(name: string): void {\r\n\r\n        this.name = name;\r\n    }\r\n\r\n    public setPath(path: string): void {\r\n\r\n        this.path = path;\r\n    }\r\n\r\n    public setData(data: string): void {\r\n\r\n        this.data = data;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/AbstractAsset.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './decorator/logMethodCall';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/decorator.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * a basic loglevel categorisation\r\n */\r\nexport enum LogLevel {\r\n    Debug, Info, Warning, Error\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log/LogLevel.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Singleton } from '../shared/helper';\r\nimport { Renderer } from './render';\r\nimport { Entity } from './entity';\r\nimport { Camera } from './camera';\r\nimport { Scene } from './scene';\r\n\r\ndeclare type Thing = Entity | Camera | Scene;\r\n\r\n/**\r\n * a class that handles adding of entities, cameras, physics ...\r\n */\r\nexport class Game extends Singleton {\r\n\r\n    /**\r\n     * the holder of the currently visible scene\r\n     */\r\n    protected currentScene: Scene;\r\n\r\n    constructor(\r\n        private renderer: Renderer\r\n    ) {\r\n        super();\r\n\r\n        // bind singleton\r\n        Game.bindInstance(this);\r\n    }\r\n\r\n    /**\r\n     * add a thing to the game\r\n     *\r\n     * @param things the things to add\r\n     */\r\n    public add(...things: Thing[]): void {\r\n\r\n        // iterate through all things\r\n        things.forEach(thing => {\r\n\r\n            // check the type of the thing\r\n            if (thing instanceof Entity) {\r\n\r\n                this.addEntity(<Entity>thing);\r\n            } else if (thing instanceof Camera) {\r\n\r\n                this.addCamera(<Camera>thing);\r\n            } else if (thing instanceof Scene) {\r\n\r\n                this.addScene(<Scene>thing);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * add one entity to the game\r\n     *\r\n     * @param entity the entity to add\r\n     */\r\n    public addEntity(entity: Entity): void {\r\n\r\n        this.renderer.addEntity(entity);\r\n    }\r\n\r\n    /**\r\n     * add one camera to the game\r\n     *\r\n     * @param camera the camera to add\r\n     */\r\n    public addCamera(camera: Camera): void {\r\n\r\n        console.log(\"add camera\", camera);\r\n    }\r\n\r\n    /**\r\n     * add one scene to the game\r\n     *\r\n     * @param scene the scene to add\r\n     * @param autostart should the scene start?\r\n     */\r\n    public addScene(scene: Scene, autostart: boolean = false): void {\r\n\r\n        if (autostart) {\r\n\r\n            // load the scene\r\n            this.loadScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get the currently visible scene\r\n     */\r\n    public getCurrentScene(): Scene {\r\n\r\n        return this.currentScene;\r\n    }\r\n\r\n    /**\r\n     * load a new scene\r\n     *\r\n     * @param scene the scene to load\r\n     */\r\n    public async loadScene(scene: Scene): Promise<void> {\r\n\r\n        let promise = new Promise<void>(r => r());\r\n\r\n        // destruct the current scene\r\n        if (this.currentScene) {\r\n\r\n            // wait for complete destruction\r\n            await this.currentScene.destroy(this);\r\n        }\r\n\r\n        // set the new scene\r\n        this.currentScene = scene;\r\n        this.currentScene.create(this);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/Game.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * the newton units as seperate type for a better readabillity\r\n */\r\nexport declare type newtons = number;\r\n\r\n/**\r\n * simple math helper class\r\n */\r\nexport class Helper {\r\n\r\n    /**\r\n     * calculates a random degree\r\n     */\r\n    public static randomDegree(): number {\r\n\r\n        return Math.floor(Math.random() * 359) + 1;\r\n    }\r\n\r\n    /**\r\n     * transforms a degree number to radian number\r\n     *\r\n     * @param degree the given degree\r\n     */\r\n    public static degreeToRadian(degree: number): number {\r\n\r\n        return degree * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * transforms a radian number to degree\r\n     *\r\n     * @param radian the radian value\r\n     */\r\n    public static radianToDegree(radian: number): number {\r\n\r\n        return radian * (180 / Math.PI);\r\n    }\r\n\r\n    /**\r\n     * rounds to a given precision\r\n     *\r\n     * @param number the number to round\r\n     * @param precision the precision\r\n     */\r\n    public static roundToPrecision(number: number, precision: number = 2): number {\r\n\r\n        return +number.toFixed(precision);\r\n    }\r\n\r\n    /**\r\n     * converts mass to newtons based on a given force\r\n     *\r\n     * @param mass the mass of the object\r\n     * @param force the gravity force\r\n     */\r\n    public static massToWeight(mass: number, force: number): newtons {\r\n\r\n        return mass * force;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/math/Helper.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * a basic holder of x and y values as one datatype\r\n */\r\nexport class Dimension {\r\n\r\n    /**\r\n     *\r\n     * @param x the x coordinate\r\n     * @param y the y coordinate\r\n     */\r\n    constructor(\r\n        public x: number = 0,\r\n        public y: number = 0\r\n    ) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/math/Dimension.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport enum FileSizeType {\r\n    Byte, Kilobyte, Megabyte, Gigabyte, Terrabyte,\r\n}\r\n\r\n/**\r\n * a helper class for file and path things\r\n */\r\nexport class File {\r\n\r\n    /**\r\n     * get the file extension of a path\r\n     *\r\n     * @param path the path to the file\r\n     */\r\n    public static getFileExtension(path: string) {\r\n\r\n        return path.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * converts a byle number to a given superset\r\n     *\r\n     * @param bytes the base byte number\r\n     * @param type the wanted type\r\n     */\r\n    public static byteToSize(bytes: number, type: FileSizeType): number {\r\n\r\n        return bytes / Math.pow(1024, <number>type);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/helper/File.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './entity/Entity';\r\nexport * from './entity/RenderableEntity';\r\nexport * from './entity/CollidableEntity';\r\nexport * from './entity/CanCollide';\r\nexport * from './entity/AnimationableEntity';\r\nexport * from './entity/AnimationEntity';\n\n\n// WEBPACK FOOTER //\n// ./src/client/entity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AnimationEntity } from './AnimationEntity';\r\n\r\n/**\r\n * the base class for all game entities\r\n */\r\nexport abstract class Entity extends AnimationEntity {\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/entity/Entity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Entity } from '../../shared/entity';\r\nimport { AnimationableEntity } from './AnimationableEntity';\r\nimport { Animation, InlineAnimation } from './Animation';\r\nimport { Log } from '../../shared/log';\r\nimport { RenderableEntity } from './RenderableEntity';\r\n\r\n/**\r\n * a base class for animations on entities\r\n */\r\nexport abstract class AnimationEntity extends Entity implements AnimationableEntity, RenderableEntity {\r\n\r\n    /**\r\n     * all animations of the entity\r\n     */\r\n    protected animationStack: InlineAnimation[] = [];\r\n\r\n    /**\r\n     * the image that is rendered during game loop to display the entitiy\r\n     */\r\n    private currentTemplate: string;\r\n\r\n    /**\r\n     * the visibility flag\r\n     */\r\n    protected visible: boolean = true;\r\n\r\n    /**\r\n     * the currently active animation\r\n     */\r\n    protected currentAnimation: Animation;\r\n\r\n    /**\r\n     * add one or many animations to the entity\r\n     */\r\n    public addAnimation(...animations: InlineAnimation[]): void {\r\n\r\n        this.animationStack.push(...animations);\r\n    }\r\n\r\n    /**\r\n     * play the given animation\r\n     * @todo: possible observable return type to let the user know when an animation changes it's state\r\n     */\r\n    public playAnimation(name: string, loop: boolean = false): void {\r\n\r\n        // if there is allready a running animation, stop it\r\n        if (this.currentAnimation)\r\n            this.currentAnimation.stopAndRestore();\r\n\r\n        // get the animation player\r\n        let animation = this.animationStack.find(a => a.name === name);\r\n\r\n        // check if the animation is valid\r\n        if (!animation) {\r\n\r\n            Log.warning(\"Animation\", name, \"was not added to\", this.constructor.name, \". Ignoring this animation.\");\r\n            return;\r\n        }\r\n\r\n        // play!\r\n        this.currentAnimation = new Animation(animation, this, loop);\r\n        this.currentAnimation.play();\r\n    }\r\n\r\n    /**\r\n     * stops the currently playing animation\r\n     */\r\n    public stopAnimation(): void {\r\n\r\n        // currently playing an animation?\r\n        if (!this.currentAnimation) {\r\n\r\n            // log a warning\r\n            Log.warning(\"trying to stop an animation on\", this.constructor.name, \"but there is no active animation\");\r\n            return;\r\n        }\r\n\r\n        // stops the animation\r\n        this.currentAnimation.stopAndRestore();\r\n        this.currentAnimation = null;\r\n    }\r\n\r\n    /**\r\n     * get the image asset that displays the current entity\r\n     */\r\n    public getImage(): string {\r\n\r\n        return this.currentTemplate;\r\n    }\r\n\r\n    /**\r\n     * set the new image for this entity\r\n     *\r\n     * @param image the current image that should represent this entity during rendering\r\n     */\r\n    public setImage(image: string): void {\r\n\r\n        this.currentTemplate = image;\r\n    }\r\n\r\n    /**\r\n     * is the entity visible? if not, the renderer will not render this entity\r\n     */\r\n    public isVisible(): boolean {\r\n\r\n        return this.visible;\r\n    }\r\n\r\n    /**\r\n     * sets the visibility of the entity\r\n     */\r\n    public setVisible(visible: boolean): void {\r\n\r\n        this.visible = visible;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/entity/AnimationEntity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Vector2D } from '../math';\r\n\r\n/**\r\n * the base class for all game entities\r\n */\r\nexport abstract class Entity {\r\n\r\n    constructor(\r\n        private position: Vector2D = new Vector2D(0, 0)\r\n    ) { }\r\n\r\n    /**\r\n     * get the current position of the entity (center point)\r\n     */\r\n    public getPosition(): Vector2D {\r\n\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * set the entities new position\r\n     *\r\n     * @param position the new position\r\n     */\r\n    public setPosition(position: Vector2D): void {\r\n\r\n        this.position = position;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/entity/Entity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './scene/Scene';\r\nexport * from './scene/LoadingScreenScene';\n\n\n// WEBPACK FOOTER //\n// ./src/client/scene.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Game } from '../Game';\r\n\r\n/**\r\n * a basic scene\r\n */\r\nexport abstract class Scene {\r\n\r\n    /**\r\n     * creates the scene. the new scene starts only if the promise is resolved.\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public abstract async create(game: Game): Promise<void>;\r\n\r\n    /**\r\n     * the update function called during game loop for the currently\r\n     * active scene\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public abstract update(game: Game): void;\r\n\r\n    /**\r\n     * called if the scene changes. only if the promise is resolved, the\r\n     * new scene will start\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public abstract async destroy(game: Game): Promise<void>;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/scene/Scene.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AssetType } from './AssetType';\r\nimport { InlineAsset } from './Asset';\r\nimport { AbstractAsset } from './AbstractAsset';\r\n\r\n/**\r\n * the image class handles exactly one image\r\n */\r\nexport class Image extends AbstractAsset {\r\n\r\n    constructor(\r\n        name?: string,\r\n        path?: string,\r\n        data?: string\r\n    ) {\r\n\r\n        super(name, path, AssetType.Image, data);\r\n    }\r\n\r\n    /**\r\n     * register an image asset\r\n     *\r\n     * @param name the unique name of the image\r\n     * @param path the path to the image\r\n     */\r\n    public static async register(...images: InlineAsset[]): Promise<any> {\r\n\r\n        // add the asset type\r\n        images.forEach(image => image.assetType = AssetType.Image);\r\n\r\n        // resiger all given images\r\n        return Image.getAssetLoader().registerAsset(Image, ...images);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/Image.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AssetType } from './AssetType';\r\nimport { Asset, InlineAsset } from './Asset';\r\nimport { AbstractAsset } from './AbstractAsset';\r\nimport { Singleton, Binary } from '../../shared/helper';\r\nimport { RamStorage } from '../../shared/storage';\r\nimport { Log } from '../../shared/log';\r\nimport { Request } from '../network';\r\n\r\n/**\r\n * a class that can handle asset loading such as images and audio\r\n */\r\nexport class AssetLoader extends Singleton {\r\n\r\n    /**\r\n     * the holder of all asset loads\r\n     */\r\n    private assetLoaderPromiseStack: Promise<AbstractAsset>[] = [];\r\n\r\n    /**\r\n     * register one or many assets to adress then later in the game\r\n     * an asset name should allways be unique, event if the asset type\r\n     * is different\r\n     *\r\n     * @param assetClass the class of the asset\r\n     * @param assets the asset to register\r\n     */\r\n    public async registerAsset(assetClass: new () => AbstractAsset, ...assets: InlineAsset[]): Promise<AbstractAsset[]> {\r\n\r\n        let outerPromise: Promise<AbstractAsset>[] = [];\r\n        let resourceStack: AbstractAsset[] = [];\r\n\r\n        // iterate through all given assets\r\n        assets.forEach(asset => {\r\n\r\n            // check if the asset exists\r\n            if (RamStorage.has(this.getAssetStorageName(asset.name, asset.assetType))) {\r\n\r\n                // log a warning that an asset has a double register\r\n                Log.warning(\"The given asset with the name\", asset.name, \"is allready registered.\");\r\n            }\r\n\r\n            // add a promise to await its loading\r\n            outerPromise.push(new Promise<AbstractAsset>(resolve => {\r\n\r\n                // construct an instance of the asset\r\n                let instance = new assetClass();\r\n                instance.setName(asset.name);\r\n                instance.setPath(asset.path);\r\n\r\n                // fill the instance\r\n                this.loadAsset(instance).then(resource => {\r\n\r\n                    // store the asset\r\n                    RamStorage.add(this.getAssetStorageName(asset.name, asset.assetType), resource);\r\n                    resourceStack.push(resource);\r\n\r\n                    // resolve the promise\r\n                    resolve(resource);\r\n                });\r\n            }));\r\n        });\r\n\r\n        // stack all loading promises to the asset loading process\r\n        this.assetLoaderPromiseStack.push(...outerPromise);\r\n\r\n        // return the promise\r\n        return Promise.all(outerPromise).then(() => { return resourceStack; });\r\n    }\r\n\r\n    /**\r\n     * loads one asset\r\n     *\r\n     * @param instance the instance to be loaded\r\n     */\r\n    private async loadAsset(instance: Asset): Promise<Asset> {\r\n\r\n        let callback: (path: string) => Promise<any>;\r\n        switch (instance.getAssetType()) {\r\n\r\n            case AssetType.Image:\r\n\r\n                callback = this.loadImage.bind(this);\r\n                break;\r\n            default:\r\n\r\n                throw `Asset type ${instance.getAssetType()} is not implemented`;\r\n        }\r\n\r\n        // load the resource\r\n        return callback(instance.getPath()).then(resource => {\r\n\r\n            // set the resource data to the asset instance\r\n            instance.setData(resource);\r\n            return instance;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * get an asset from the storage\r\n     *\r\n     * @param name the name of the asset\r\n     */\r\n    public getAsset<T>(name: string, type: AssetType): T {\r\n\r\n        // ask the ram storage for the asset\r\n        return RamStorage.get<T>(this.getAssetStorageName(name, type));\r\n    }\r\n\r\n    /**\r\n     * get the amount of currently registered assets of the given type\r\n     *\r\n     * @param type the asset type\r\n     */\r\n    public getAssetAmount(type: AssetType): number {\r\n\r\n        return RamStorage.amount(this.getAssetStorageName('', type));\r\n    }\r\n\r\n    /**\r\n     * get all unresolved assets from the register process\r\n     */\r\n    public getUnresolvedPromised(): Promise<AbstractAsset>[] {\r\n\r\n        return this.assetLoaderPromiseStack;\r\n    }\r\n\r\n    /**\r\n     * add promises to the asset loader. this can be used to delay the game\r\n     * startup until all assets are loaded.\r\n     *\r\n     * @param promises the promises to add\r\n     */\r\n    public addAssetLoaderPromise(...promises: Promise<any>[]): Promise<any>[] {\r\n\r\n        this.assetLoaderPromiseStack.push(...promises);\r\n        return promises;\r\n    }\r\n\r\n    /**\r\n     * get the storage asset name\r\n     *\r\n     * @param name the name of the asset\r\n     */\r\n    private getAssetStorageName(name: string, type: AssetType): string {\r\n\r\n        let path = `assetloader.${type}`;\r\n        if (name) path += `.${name}`;\r\n\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * load an image\r\n     *\r\n     * @param path the path to the image\r\n     */\r\n    private async loadImage(path: string): Promise<ImageBitmap> {\r\n\r\n        // if the path is a data uri, return this instantly\r\n        if (path.indexOf('data:image/') === 0) {\r\n\r\n            return new Promise<ImageBitmap>(resolve => {\r\n\r\n                resolve(createImageBitmap(Binary.dataUriToBlob(path)));\r\n            });\r\n        }\r\n\r\n        // make an xhr call to the file\r\n        return Request.getBinary(path).then((image) => {\r\n\r\n            // create the image bitmap for the blob\r\n            return createImageBitmap(Binary.dataUriToBlob(image));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * load an audio file\r\n     *\r\n     * @param path the path to the audio file\r\n     */\r\n    private async loadAudio(path: string): Promise<any> {\r\n\r\n    }\r\n\r\n    /**\r\n     * load a json file and parse its body\r\n     *\r\n     * @param path the path to the json file\r\n     */\r\n    private async loadJSON(path: string): Promise<any> {\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * creates an html element at the dom to load assets\r\n     *\r\n     * @param tagName the tagname of the new element\r\n     */\r\n    private createDomElement(tagName: string): HTMLElement {\r\n\r\n        // return the created element\r\n        return document.createElement(tagName);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/AssetLoader.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './network/Request';\n\n\n// WEBPACK FOOTER //\n// ./src/client/network.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { RenderableEntity } from '../entity';\r\nimport { Singleton } from '../../shared/helper';\r\nimport { Image } from '../asset';\r\nimport { Game } from '../Game';\r\nimport { ClientConfig } from '../ClientConfig';\r\n\r\n/**\r\n * the basic renderer class that all renderers should extend\r\n */\r\nexport abstract class BasicRenderer extends Singleton {\r\n\r\n    private entities: RenderableEntity[] = [];\r\n\r\n    /**\r\n     * holds the game instance\r\n     */\r\n    protected gameInstance: Game;\r\n\r\n    /**\r\n     * holder of fps things\r\n     */\r\n    protected fps: {\r\n        fps: number,\r\n        now?: number,\r\n        lastUpdate: number,\r\n        filter: number\r\n    } = {\r\n        fps: 0,\r\n        lastUpdate: +new Date(),\r\n        filter: 50\r\n    };\r\n\r\n    /**\r\n     * sets up the renderer\r\n     *\r\n     * @param clientConfig the current config\r\n     */\r\n    public setup(clientConfig: ClientConfig): void {\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * get all renderable entities\r\n     */\r\n    protected getRenderableEntities(): RenderableEntity[] {\r\n\r\n        let renderableEntities: RenderableEntity[] = [];\r\n        this.entities.forEach(entity => {\r\n\r\n            // only visible entities and entities that have an image\r\n            if (entity.isVisible() && entity.getImage())\r\n                renderableEntities.push(entity);\r\n        });\r\n\r\n        // just return the currently visible entities\r\n        return renderableEntities;\r\n    }\r\n\r\n    /**\r\n     * print the current fps on the canvas\r\n     */\r\n    protected calculateFps(): void {\r\n\r\n        // @see https://stackoverflow.com/questions/5078913/html5-canvas-performance-calculating-loops-frames-per-second\r\n        let thisFrameFps = 1000 / ((this.fps.now = +new Date()) - this.fps.lastUpdate);\r\n\r\n        // if there was an update\r\n        if (this.fps.now != this.fps.lastUpdate) {\r\n\r\n            // yes, calculate the new fps\r\n            this.fps.fps += (thisFrameFps - this.fps.fps) / this.fps.filter;\r\n            this.fps.lastUpdate = this.fps.now;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add an entity to the current game scene\r\n     */\r\n    public addEntity(entity: RenderableEntity): void {\r\n\r\n        this.entities.push(entity);\r\n    }\r\n\r\n    /**\r\n     * print the current fps on the screen\r\n     *\r\n     * @param fps the current fps\r\n     */\r\n    protected abstract printFps(fps: number): void;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/render/BasicRenderer.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Client } from '../client/Client';\r\nimport { CanvasRenderer } from '../client/render';\r\nimport { Viewport } from '../client/environment';\r\nimport { Game } from '../client/Game';\r\n\r\nimport { Image, Sprite, AssetLoader } from '../client/asset';\r\nimport { logMethodCall } from '../shared/decorator';\r\n\r\nimport { Player } from './entity/Player';\r\nimport { LoadingScreenScene } from '../client/scene';\r\nimport { Input } from '../client/input';\r\nimport { Vector2D } from '../shared/math';\r\n\r\nclass MyAwesomeGame extends Client {\r\n\r\n    private player: Player;\r\n\r\n    constructor() {\r\n\r\n        super({\r\n            gameDimension: Viewport.getWindowDimension(),\r\n            rederer: CanvasRenderer,\r\n            printFps: true\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * preload function that allows to load sprites and do some heavy\r\n     * stuff before the game actually starts\r\n     */\r\n    public preload(): void {\r\n\r\n        Sprite.register({\r\n            name: 'player',\r\n            path: 'asset/image/player.png'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * a function that is called if the preload phase is completed\r\n     * you now have access to the registered assets\r\n     */\r\n    @logMethodCall\r\n    public loaded(game: Game): void {\r\n\r\n        // add the player to the game\r\n        this.player = new Player();\r\n        game.add(this.player);\r\n        game.loadScene(new LoadingScreenScene());\r\n\r\n        // play idle animation\r\n        this.player.playAnimation('idle', true);\r\n    }\r\n\r\n    /**\r\n     * update function handles the interaction with the player eg. the keybord\r\n     * input and changing the players direction or speed.\r\n     * this method is called during game loop BEFORE rendering!\r\n     *\r\n     * @warning dont do heavy stuff in here because this meight cause performance issues\r\n     */\r\n    public update(game: Game, input: Input): void {\r\n\r\n        let keys = input.getArrowKeys();\r\n\r\n        // move the player\r\n        if (keys.down) {\r\n\r\n            this.player.setPosition(this.player.getPosition().add(\r\n                new Vector2D(0, 5)\r\n            ));\r\n        } else if (keys.up) {\r\n\r\n            this.player.setPosition(this.player.getPosition().add(\r\n                new Vector2D(0, -5)\r\n            ));\r\n        }\r\n\r\n        if (keys.left) {\r\n\r\n            this.player.setPosition(this.player.getPosition().add(\r\n                new Vector2D(-5, 0)\r\n            ));\r\n        } else if (keys.right) {\r\n\r\n            this.player.setPosition(this.player.getPosition().add(\r\n                new Vector2D(5, 0)\r\n            ));\r\n        }\r\n    }\r\n}\r\n\r\n// start the game\r\nnew MyAwesomeGame();\n\n\n// WEBPACK FOOTER //\n// ./src/example/Example.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { ClientConfig } from './ClientConfig';\r\nimport { logMethodCall } from '../shared/decorator';\r\nimport { Log } from '../shared/log';\r\nimport { Game } from './Game';\r\nimport { RamStorage } from '../shared/storage';\r\n\r\nimport { AssetLoader, AssetType } from './asset';\r\nimport { Renderer } from './render';\r\nimport { Input } from './input';\r\n\r\n/**\r\n * the initiation class of the game client\r\n */\r\nexport abstract class Client {\r\n\r\n    /**\r\n     * the renderer instance\r\n     */\r\n    private renderer: Renderer;\r\n\r\n    /**\r\n     * the game instance\r\n     */\r\n    private gameInstance: Game;\r\n\r\n    /**\r\n     * the input instance\r\n     */\r\n    private inputInstance: Input;\r\n\r\n    constructor(\r\n        private clientConfig: ClientConfig\r\n    ) {\r\n\r\n        // print package and version info\r\n        console.info(\"%c -= Qhun-Engine v1.0.0 =- [ http://engine.qhun.de ]\", \"background: green; font-color: white;\");\r\n\r\n        // step by step setup of the game\r\n        this.bindLoadEvent();\r\n    }\r\n\r\n    /**\r\n     * bind window events to let the start of the engine pause\r\n     * until the javascript dom is ready\r\n     */\r\n    @logMethodCall\r\n    private bindLoadEvent(): void {\r\n\r\n        // at window load, start the internal setup\r\n        window.addEventListener('load', this.internalSetup.bind(this));\r\n    }\r\n\r\n    /**\r\n     * internal setup phase\r\n     */\r\n    @logMethodCall\r\n    private internalSetup(): void {\r\n\r\n        // get all promised from the preload phase and await them\r\n        let assetLoader = AssetLoader.getInstance<AssetLoader>();\r\n\r\n        // setup renderer\r\n        this.renderer = new this.clientConfig.rederer();\r\n        this.renderer.setup(this.clientConfig);\r\n\r\n        // some logging\r\n        Log.info(\"Using\", this.renderer.constructor.name, \"as Renderer\");\r\n\r\n        // start the preload phase\r\n        this.preload();\r\n\r\n        // await the asset loading\r\n        Promise.all(assetLoader.getUnresolvedPromised()).then(() => {\r\n\r\n            // log the information about the registration process of assets\r\n            Log.info(\"Registered\", assetLoader.getAssetAmount(AssetType.Image), \"Images\");\r\n            Log.info(\"Registered\", assetLoader.getAssetAmount(AssetType.Audio), \"Sounds\");\r\n            Log.info(\"Registered\", assetLoader.getAssetAmount(AssetType.Json), \"JSON Objects\");\r\n\r\n            // all assets loaded, continue startup\r\n            this.gameInstance = new Game(this.renderer);\r\n            this.inputInstance = new Input();\r\n\r\n            // fire loaded event\r\n            this.loaded(this.gameInstance);\r\n            this.printMemoryFootprint();\r\n\r\n            // init the game loop\r\n            this.gameLoop();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * logs the current memory footprint to the console\r\n     */\r\n    private printMemoryFootprint(): void {\r\n\r\n        let assets = RamStorage.getSize(\"assetloader\");\r\n        let misc = RamStorage.getSize(\"singleton\");\r\n        let overall = assets + misc;\r\n\r\n        // print current memory footprint\r\n        Log.info(\"Memory footprint:\", overall, \"MB\");\r\n        Log.info(\"\\t- Assets:\\t\", assets, \"MB\");\r\n        Log.info(\"\\t- Misc:\\t\\t\", misc, \"MB\");\r\n    }\r\n\r\n    /**\r\n     * the game loop where all things come together\r\n     */\r\n    private gameLoop(): void {\r\n\r\n        // call update method\r\n        this.update(this.gameInstance, this.inputInstance);\r\n\r\n        // call the scene update\r\n        let scene = this.gameInstance.getCurrentScene();\r\n        if (scene) scene.update(this.gameInstance);\r\n\r\n        // render the game\r\n        if (typeof this.renderer.preRender === 'function') this.renderer.preRender();\r\n        this.renderer.render();\r\n        if (typeof this.renderer.postRender === 'function') this.renderer.postRender();\r\n\r\n        // request the next game frame\r\n        window.requestAnimationFrame(this.gameLoop.bind(this));\r\n    }\r\n\r\n    /**\r\n     * preload function that allows to load sprites and do some heavy\r\n     * stuff before the game actually starts\r\n     */\r\n    public abstract preload(): void;\r\n\r\n    /**\r\n     * a function that is called if the preload phase is completed\r\n     * you now have access to the registered assets\r\n     */\r\n    public abstract loaded(game: Game): void;\r\n\r\n    /**\r\n     * update function handles the interaction with the player eg. the keybord\r\n     * input and changing the players direction or speed.\r\n     * this method is called during game loop BEFORE rendering!\r\n     *\r\n     * @warning dont do heavy stuff in here because this meight cause performance issues\r\n     */\r\n    public abstract update(game: Game, input: Input): void;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/Client.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Log } from '../log';\r\n\r\n/**\r\n * a decorator for logging method calls to debug console\r\n *\r\n * @param target\r\n * @param propertyKey\r\n * @param descriptor\r\n */\r\nexport function logMethodCall(\r\n    target: Object, key: string | symbol, descriptor: TypedPropertyDescriptor<Function>\r\n) {\r\n\r\n    return {\r\n        value: function (...args: any[]) {\r\n\r\n            // log the call\r\n            Log.debug(\"@logMethodCall\", `${target.constructor.name}:${key}()`);\r\n\r\n            // original method call\r\n            return descriptor.value.apply(this, args);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/decorator/logMethodCall.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { LogLevel } from './LogLevel';\r\n\r\n/**\r\n * a log wrapper to allow log levels and a more complex\r\n * logging structure\r\n */\r\nexport class Log {\r\n\r\n    // the current loglevel\r\n    private static logLevel: LogLevel = LogLevel.Debug;\r\n\r\n    /**\r\n     * sets the log level for the application environment\r\n     *\r\n     * @param level the new log level\r\n     */\r\n    public static setLogLevel(level: LogLevel): void {\r\n\r\n        Log.logLevel = level;\r\n    }\r\n\r\n    /**\r\n     * logs the given data\r\n     *\r\n     * @param level the level to log in\r\n     * @param params all params as vararg array\r\n     */\r\n    public static log(level: LogLevel, ...params: any[]): void {\r\n\r\n        // log if the log level is ok\r\n        if (parseInt(<any>level) >= parseInt(<any>Log.logLevel)) {\r\n\r\n            // level ok, log\r\n            Log.getLogFunctionByLevel(level)(\r\n                `[Log.${LogLevel[level]}]`, ...params\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets a callback function to log\r\n     *\r\n     * @param level the level to get the function from\r\n     */\r\n    private static getLogFunctionByLevel(level: LogLevel): Function {\r\n\r\n        let callback = () => { };\r\n\r\n        // go through the different log levels\r\n        switch (level) {\r\n\r\n            case LogLevel.Debug: callback = console.debug; break;\r\n            case LogLevel.Info: callback = console.info; break;\r\n            case LogLevel.Warning: callback = console.warn; break;\r\n            case LogLevel.Error: callback = console.error; break;\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * get the current log level\r\n     */\r\n    public static getLogLevel(): LogLevel {\r\n\r\n        return Log.logLevel;\r\n    }\r\n\r\n    /**\r\n     * logs as debug level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static debug(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Debug, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as info level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static info(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Info, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as warning level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static warning(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Warning, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as error level\r\n     *\r\n     * @param params all params as vararg array\r\n     */\r\n    public static error(...params: any[]): void {\r\n\r\n        Log.log(LogLevel.Error, ...params);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/log/Log.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { RamStorage } from '../storage';\r\n\r\n/**\r\n * a class to handle the singleton paradigmen\r\n */\r\nexport abstract class Singleton {\r\n    /**\r\n     * generates a storage name for the instance storing\r\n     *\r\n     * @param className the class name\r\n     */\r\n    private static generateStorageName(): string {\r\n\r\n        return `singleton.instance.${this.name}`;\r\n    }\r\n\r\n    /**\r\n     * get the singleton instance\r\n     */\r\n    public static getInstance<T>(): T {\r\n\r\n        let instance = null;\r\n        if (!RamStorage.has(this.generateStorageName())) {\r\n\r\n            // get the constructor and store an instance of the class at the ram storage\r\n            let constructor = <{ new (): T }><any>this;\r\n            RamStorage.add(this.generateStorageName(), new constructor());\r\n        }\r\n\r\n        // get the instance\r\n        return RamStorage.get<T>(this.generateStorageName());\r\n    }\r\n\r\n    /**\r\n     * bind the instance to the singleton storage\r\n     *\r\n     * @param instance the instance that should be bound\r\n     */\r\n    protected static bindInstance(instance: any): void {\r\n\r\n        // save the instance\r\n        RamStorage.add(this.generateStorageName(), instance);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/helper/Singleton.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n// the dependency to get the memory footprint ob stored objects\r\nlet sizeof = require('object-sizeof');\r\n\r\nimport { Helper } from '../math';\r\nimport { File, FileSizeType } from '../helper/File';\r\n\r\n/**\r\n * holds objects in the ram of the operating unit\r\n */\r\nexport class RamStorage {\r\n\r\n    // the private cache object\r\n    private static cache: {\r\n        [path: string]: any\r\n    } = {};\r\n\r\n    /**\r\n     * adds an elemement to the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     * @param elemement the element to store\r\n     */\r\n    public static add(path: string, elemement: any): void {\r\n\r\n        RamStorage.cache[path] = elemement;\r\n    }\r\n\r\n    /**\r\n     * removes an element from the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static remove(path: string): void {\r\n\r\n        delete RamStorage.cache[path];\r\n    }\r\n\r\n    /**\r\n     * reset the complete storage!\r\n     */\r\n    public static clear(): void {\r\n\r\n        this.cache = {};\r\n    }\r\n\r\n    /**\r\n     * get an element from the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static get<T>(path: string): T {\r\n\r\n        return <T>RamStorage.cache[path];\r\n    }\r\n\r\n    /**\r\n     * checks if an object exists in the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static has(path: string): boolean {\r\n\r\n        return RamStorage.get(path) !== undefined;\r\n    }\r\n\r\n    /**\r\n     * the path to one or many objects in the storage\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static amount(path: string): number {\r\n\r\n        let counter = 0;\r\n        Object.keys(RamStorage.cache).forEach(key => {\r\n\r\n            // if the path is present, update counter\r\n            if (key.indexOf(path) === 0) counter++;\r\n        });\r\n\r\n        return counter;\r\n    }\r\n\r\n    /**\r\n     * calculates the used memory for the selected objects in the storage.\r\n     * unit is in MB or the given type\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static getSize(path: string = \"\", type: FileSizeType = FileSizeType.Byte): number {\r\n\r\n        let byteCounter = 0;\r\n        Object.keys(RamStorage.cache).forEach(key => {\r\n\r\n            // if the path is present, update counter\r\n            if (key.indexOf(path) === 0) byteCounter += sizeof(RamStorage.cache[key]);\r\n        });\r\n\r\n        let mb = File.byteToSize(byteCounter, type);\r\n        return Helper.roundToPrecision(mb, 2);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/storage/RamStorage.ts","// Copyright 2014 Andrei Karpushonak\n\n\"use strict\";\n\nvar ECMA_SIZES  = require('./byte_size');\nvar Buffer = require('buffer').Buffer;\n\n/**\n * Main module's entry point\n * Calculates Bytes for the provided parameter\n * @param object - handles object/string/boolean/buffer\n * @returns {*}\n */\nfunction sizeof(object) {\n    if (object !== null && typeof (object) === 'object') {\n      if (Buffer.isBuffer(object)) {\n        return object.length;\n      }\n      else {\n        var bytes = 0;\n        for (var key in object) {\n\n          if(!Object.hasOwnProperty.call(object, key)) {\n            continue;\n          }\n\n          bytes += sizeof(key);\n          try {\n            bytes += sizeof(object[key]);\n          } catch (ex) {\n            if(ex instanceof RangeError) {\n              // circular reference detected, final result might be incorrect\n              // let's be nice and not throw an exception\n              bytes = 0;\n            }\n          }\n        }\n        return bytes;\n      }\n    } else if (typeof (object) === 'string') {\n      return object.length * ECMA_SIZES.STRING;\n    } else if (typeof (object) === 'boolean') {\n      return ECMA_SIZES.BOOLEAN;\n    } else if (typeof (object) === 'number') {\n      return ECMA_SIZES.NUMBER;\n    } else {\n      return 0;\n    }\n}\n\nmodule.exports = sizeof;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-sizeof/index.js\n// module id = 29\n// module chunks = 0","/**\n * Byte sizes are taken from ECMAScript Language Specification\n * http://www.ecma-international.org/ecma-262/5.1/\n * http://bclary.com/2004/11/07/#a-4.3.16\n */\n\nmodule.exports = {\n    STRING: 2,\n    BOOLEAN: 4,\n    NUMBER: 8\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-sizeof/byte_size.js\n// module id = 30\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 31\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 32\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 33\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 34\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 35\n// module chunks = 0","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Helper } from './Helper';\r\nimport { Dimension } from './Dimension';\r\n\r\n/**\r\n * represents a 2D vector with x and y coordinates.\r\n */\r\nexport class Vector2D<T extends number = number> extends Dimension {\r\n\r\n    /**\r\n     *\r\n     * @param x the x coordinate\r\n     * @param y the y coordinate\r\n     */\r\n    constructor(\r\n        x: T = <T>0,\r\n        y: T = <T>0\r\n    ) {\r\n        super(x, y);\r\n    }\r\n\r\n    /**\r\n     * adds another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public add(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x + vector.x),\r\n            <T>(this.y + vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * substract another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public substract(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x - vector.x),\r\n            <T>(this.y - vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * divide another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public divide(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x / vector.x),\r\n            <T>(this.y / vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * multiply two vectors\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public multiply(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x * vector.x),\r\n            <T>(this.y * vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * rounds the vector to a given precision\r\n     */\r\n    public round(precision: number = 2): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(Helper.roundToPrecision(this.x, precision)),\r\n            <T>(Helper.roundToPrecision(this.y, precision))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * calculates the distance of two vector points\r\n     *\r\n     * @param otherVector the other vector calculate to\r\n     * @return the distance in pixel\r\n     */\r\n    public distanceToVector(otherVector: Vector2D<T>): number {\r\n\r\n        return Math.sqrt(\r\n            Math.pow((this.x - otherVector.x), 2)\r\n            +\r\n            Math.pow((this.y - otherVector.y), 2)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/math/Vector2D.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * a helper class for binary content\r\n */\r\nexport class Binary {\r\n\r\n    /**\r\n     * converts a data uri to a blob\r\n     *\r\n     * @param dataUri the data uri from the object\r\n     */\r\n    public static dataUriToBlob(dataUri: string): Blob {\r\n\r\n        // @see https://stackoverflow.com/questions/12168909/blob-from-dataurl\r\n        // convert base64 to raw binary data held in a string\r\n        // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n        let byteString = atob(dataUri.split(',')[1]);\r\n\r\n        // separate out the mime component\r\n        let mimeString = dataUri.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n        // write the bytes of the string to an ArrayBuffer\r\n        let ab = new ArrayBuffer(byteString.length);\r\n\r\n        // create a view into the buffer\r\n        let ia = new Uint8Array(ab);\r\n\r\n        // set the bytes of the buffer to the correct values\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n\r\n        // write the ArrayBuffer to a blob, and you're done\r\n        let blob = new Blob([ab], { type: mimeString });\r\n        return blob;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/helper/Binary.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './entity/CanCollide';\r\nexport * from './entity/Entity';\r\nexport * from './entity/CollidableEntity';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/entity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Entity } from '../entity/Entity';\r\nimport { CanCollide } from '../entity/CanCollide';\r\nimport { CollisionType } from '../collision';\r\nimport { Vector2D } from '../math';\r\n\r\n/**\r\n * an entity that can collide with other collidable entities\r\n */\r\nexport abstract class CollidableEntity extends Entity implements CanCollide {\r\n\r\n    constructor(\r\n        private entityWidth: number,\r\n        private entityHeight: number,\r\n        position: Vector2D\r\n    ) {\r\n        super(position);\r\n    }\r\n\r\n    /**\r\n     * get the entities collision type\r\n     */\r\n    public abstract getCollisionType(): CollisionType;\r\n\r\n    /**\r\n     * an event handler that will fire if another entity collided with this instance\r\n     */\r\n    public abstract onCollision(otherEntity: CollidableEntity): void;\r\n\r\n    /**\r\n     * get the width of the entity\r\n     */\r\n    public getWidth(): number {\r\n\r\n        return this.entityWidth;\r\n    }\r\n\r\n    /**\r\n     * get the height of the entity\r\n     */\r\n    public getHeight(): number {\r\n\r\n        return this.entityHeight;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/entity/CollidableEntity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Sprite } from '../asset';\r\nimport { Singleton } from '../../shared/helper';\r\nimport { Log } from '../../shared/log';\r\nimport { AnimationEntity } from './AnimationEntity';\r\n\r\n/**\r\n * a type for inline object animations\r\n */\r\nexport interface InlineAnimation {\r\n\r\n    /**\r\n     * the name of the animation. used for playing them later\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * the path to the animation sprite\r\n     */\r\n    sprite: string;\r\n\r\n    /**\r\n     * the different states of the animation\r\n     */\r\n    states: InlineAnimationState[];\r\n}\r\n\r\n/**\r\n * a type for online animation states\r\n */\r\nexport interface InlineAnimationState {\r\n\r\n    /**\r\n     * the sub image of the sprite\r\n     */\r\n    image: string;\r\n\r\n    /**\r\n     * the amount of miliseconds the animation should be visible.\r\n     * a duration of -1 means, that this state should be infinitly.\r\n     */\r\n    duration: number;\r\n}\r\n\r\n/**\r\n * a class that handles entity animations for different states\r\n */\r\nexport class Animation {\r\n\r\n    /**\r\n     * the holder of the entities image before playing the animation\r\n     */\r\n    private previousEntityImage: string;\r\n\r\n    /**\r\n     * holder of the current visible animation phase\r\n     */\r\n    private currentAnimationPhase: number = 0;\r\n\r\n    /**\r\n     * holder of the timeout event\r\n     */\r\n    private currentTimeoutHolder: number;\r\n\r\n    constructor(\r\n        private animation: InlineAnimation,\r\n        private entity: AnimationEntity,\r\n        private loop: boolean = false\r\n    ) { }\r\n\r\n    /**\r\n     * play one animation\r\n     *\r\n     * @todo: possible observable return type to let the user know when an animation changes it's state\r\n     *\r\n     * @param animation the animation to play\r\n     */\r\n    public play(): void {\r\n\r\n        // save the image of the entity\r\n        this.previousEntityImage = this.entity.getImage();\r\n\r\n        // display the animation\r\n        this.nextAnimationFrame();\r\n    }\r\n\r\n    /**\r\n     * displays the next animation frame\r\n     */\r\n    private nextAnimationFrame(): void {\r\n\r\n        // get the current state\r\n        let currentState = this.animation.states[this.currentAnimationPhase];\r\n\r\n        // set the image of the entity\r\n        this.entity.setImage(`${this.animation.sprite}[${currentState.image}]`);\r\n\r\n        // request the next state\r\n        this.currentAnimationPhase += 1;\r\n\r\n        // check if the animation should loop or if there is a next animation state\r\n        if (this.loop || this.currentAnimationPhase < this.animation.states.length) {\r\n\r\n            // checks if the state should overflow\r\n            if (this.loop && this.currentAnimationPhase >= this.animation.states.length) {\r\n\r\n                this.currentAnimationPhase = 0;\r\n            }\r\n\r\n            // wait for the next frame request\r\n            if (currentState.duration !== -1)\r\n                this.currentTimeoutHolder = window.setTimeout(this.nextAnimationFrame.bind(this), currentState.duration);\r\n        } else {\r\n\r\n            // animation is completed\r\n            this.stopAndRestore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * stops the animation and restores the image of the entity\r\n     */\r\n    public stopAndRestore(): void {\r\n\r\n        // stop the animation\r\n        window.clearTimeout(this.currentTimeoutHolder);\r\n\r\n        // restores the image\r\n        this.entity.setImage(this.previousEntityImage);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/entity/Animation.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Entity } from './Entity';\r\nimport { CanCollide } from './CanCollide';\r\nimport { Vector2D } from '../../shared/math';\r\nimport { CollisionType } from '../../shared/collision';\r\nimport { HasMass } from './HasMass';\r\n\r\n/**\r\n * the client class for a collidable entity\r\n */\r\nexport abstract class CollidableEntity extends Entity implements CanCollide, HasMass {\r\n\r\n    /**\r\n     * the current mass of the entity\r\n     */\r\n    private mass: number = 0;\r\n\r\n    constructor(\r\n        private entityWidth: number,\r\n        private entityHeight: number,\r\n        position: Vector2D\r\n    ) {\r\n        super(position);\r\n    }\r\n\r\n    /**\r\n     * get the entities collision type\r\n     */\r\n    public abstract getCollisionType(): CollisionType;\r\n\r\n    /**\r\n     * an event handler that will fire if another entity collided with this instance\r\n     */\r\n    public abstract onCollision(otherEntity: CollidableEntity): void;\r\n\r\n    /**\r\n     * get the width of the entity\r\n     */\r\n    public getWidth(): number {\r\n\r\n        return this.entityWidth;\r\n    }\r\n\r\n    /**\r\n     * get the height of the entity\r\n     */\r\n    public getHeight(): number {\r\n\r\n        return this.entityHeight;\r\n    }\r\n\r\n    /**\r\n     * get the current mass of the entity\r\n     */\r\n    public getMass(): number {\r\n\r\n        return this.mass;\r\n    }\r\n\r\n    /**\r\n     * set a new mass to an entity\r\n     */\r\n    public setMass(mass: number): void {\r\n\r\n        this.mass = mass;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/entity/CollidableEntity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './camera/Camera';\n\n\n// WEBPACK FOOTER //\n// ./src/client/camera.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport class Camera { }\n\n\n// WEBPACK FOOTER //\n// ./src/client/camera/Camera.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Scene } from '../scene/Scene';\r\nimport { Game } from '../Game';\r\n\r\n/**\r\n * a basic loading screen scene\r\n */\r\nexport class LoadingScreenScene extends Scene {\r\n\r\n    /**\r\n     * creates the scene. the new scene starts only if the promise is resolved.\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public async create(game: Game): Promise<void> {\r\n\r\n        console.log(\"scene create\");\r\n    }\r\n\r\n    /**\r\n     * the update function called during game loop for the currently\r\n     * active scene\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public update(game: Game): void {\r\n\r\n       // console.log(\"scene update\");\r\n    }\r\n\r\n    /**\r\n     * called if the scene changes. only if the promise is resolved, the\r\n     * new scene will start\r\n     *\r\n     * @param game the current game holder instance\r\n     */\r\n    public async destroy(game: Game): Promise<void> {\r\n\r\n        console.log(\"scene destroy\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/scene/LoadingScreenScene.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport class Request {\r\n\r\n    /**\r\n     * make an asynchronus get request to the given url\r\n     * and returns a blob instance\r\n     *\r\n     * @param path the url\r\n     */\r\n    public static async getBinary(path: string): Promise<string> {\r\n\r\n        return new Promise<string>(resolve => {\r\n\r\n            // create xhr instance and set properties\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'blob';\r\n            xhr.open('GET', path);\r\n\r\n            // register finish event\r\n            xhr.onload = () => {\r\n\r\n                // create the blob reader\r\n                let reader = new FileReader();\r\n                reader.onloadend = () => {\r\n\r\n                    resolve(reader.result);\r\n                }\r\n                reader.readAsDataURL(xhr.response);\r\n            };\r\n\r\n            // send the request\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * make an asynchronus get request to the given url\r\n     *\r\n     * @param path the url\r\n     */\r\n    public static async get(path: string): Promise<string> {\r\n\r\n        return new Promise<string>(resolve => {\r\n\r\n            // create xhr instance and set properties\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', path);\r\n\r\n            // register finish event\r\n            xhr.onload = () => {\r\n\r\n                resolve(xhr.response);\r\n            };\r\n\r\n            // send the request\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/network/Request.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AssetType } from './AssetType';\r\nimport { InlineAsset } from './Asset';\r\nimport { Image } from './Image';\r\nimport { AbstractAsset } from './AbstractAsset';\r\nimport { Request } from '../network';\r\nimport { File } from '../../shared/helper';\r\n\r\nconst SPRITE_MAP_DELIMITER = ',';\r\n\r\n/**\r\n * an internal enum to index the correct array position for sprite maps\r\n */\r\nenum SpriteMapInformation {\r\n\r\n    Name, OffsetLeft, OffsetTop, Width, Height\r\n}\r\n\r\n/**\r\n * the sprite class is able to handle multiple images build into\r\n * one big sprite graphic file\r\n */\r\nexport class Sprite extends AbstractAsset {\r\n\r\n    constructor(\r\n        name?: string,\r\n        path?: string,\r\n        data?: string,\r\n        public map?: string\r\n    ) {\r\n\r\n        super(name, path, AssetType.Image, data);\r\n    }\r\n\r\n    /**\r\n     * register a sprite asset\r\n     *\r\n     * @param name the unique name of the image\r\n     * @param path the path to the image\r\n     */\r\n    public static async register(...sprites: InlineAsset[]): Promise<Sprite[]> {\r\n\r\n        // get the asset loader\r\n        let assetLoader = Sprite.getAssetLoader();\r\n        let mapLoaderPromise: Promise<any>[] = [];\r\n        let spriteMap: string[] = [];\r\n\r\n        // load sprite maps and add asset type to the inline asset\r\n        sprites.forEach(sprite => {\r\n\r\n            // set the asset type\r\n            sprite.assetType = AssetType.Image;\r\n\r\n            // get the sprite data file to split up the images\r\n            mapLoaderPromise.push(\r\n                Request.get(sprite.path + '.sprite')\r\n                    .then(map => spriteMap.push(map))\r\n            );\r\n        });\r\n\r\n        // if the maps are loaded, start the regist\r\n        // previously the current map loader promises should be added to\r\n        // the asset loadering promises to prevent game from beeing started to early\r\n        return Promise.all(assetLoader.addAssetLoaderPromise(new Promise<Sprite[]>(resolve => {\r\n\r\n            // now await the map loading\r\n            return Promise.all(mapLoaderPromise).then(() => {\r\n\r\n                // register the sprite as image\r\n                return assetLoader.registerAsset(Sprite, ...sprites).then(resources => {\r\n\r\n                    // cast the resources\r\n                    let sprites = <Sprite[]>resources;\r\n                    let spriteTransformPromise: Promise<any>[] = [];\r\n\r\n                    // add the sprite maps\r\n                    sprites.forEach((sprite, index) => {\r\n\r\n                        // add the map\r\n                        sprite.map = spriteMap[index];\r\n\r\n                        // register all sub images\r\n                        spriteTransformPromise.push(\r\n                            Sprite.registerSpriteSubImages(sprite)\r\n                        );\r\n                    });\r\n\r\n                    // await the sprite transform\r\n                    return Promise.all(spriteTransformPromise).then(() => {\r\n\r\n                        // return all generated image assets\r\n                        resolve(sprites);\r\n                    });\r\n                });\r\n            });\r\n        })));\r\n    }\r\n\r\n    /**\r\n     * extracts all sub images from a sprite image by its map\r\n     * and register them as single image\r\n     */\r\n    private static async registerSpriteSubImages(sprite: Sprite): Promise<Image[]> {\r\n\r\n        // split the map into lines and count them\r\n        let mapLines = sprite.map.split(String.fromCharCode(13));\r\n        let countImages = mapLines.length;\r\n        let itemRegisterPromiseStack: Promise<Image>[] = [];\r\n\r\n        // create a canvas element for the picture extraction\r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        // iterate through all sub images\r\n        for (let i = 0; i < countImages; i++) {\r\n\r\n            // get the information of image width and height\r\n            let info = mapLines[i].split(',');\r\n\r\n            // set the canvas height and width\r\n            canvas.width = parseInt(info[SpriteMapInformation.Width]);\r\n            canvas.height = parseInt(info[SpriteMapInformation.Height]);\r\n\r\n            // draw the image on the canvas\r\n            ctx.drawImage(\r\n                <ImageBitmap>sprite.getData(),\r\n                -parseInt(info[SpriteMapInformation.OffsetLeft]),\r\n                -parseInt(info[SpriteMapInformation.OffsetTop])\r\n            );\r\n\r\n            // get the image as data uri to register the new image\r\n            itemRegisterPromiseStack.push(Image.register({\r\n                name: `${sprite.name}[${info[SpriteMapInformation.Name].trim()}]`,\r\n                path: canvas.toDataURL()\r\n            }));\r\n        }\r\n\r\n        // await the registration process\r\n        return Promise.all(itemRegisterPromiseStack);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/Sprite.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AssetType } from './AssetType';\r\nimport { InlineAsset } from './Asset';\r\nimport { AbstractAsset } from './AbstractAsset';\r\n\r\nexport class Sound extends AbstractAsset {\r\n\r\n    constructor(\r\n        name?: string,\r\n        path?: string,\r\n        data?: string\r\n    ) {\r\n\r\n        super(name, path, AssetType.Audio, data);\r\n    }\r\n\r\n    /**\r\n     * register an image asset\r\n     *\r\n     * @param name the unique name of the image\r\n     * @param path the path to the image\r\n     */\r\n    public static register(...sounds: InlineAsset[]): void {\r\n\r\n        // add the asset type\r\n        sounds.forEach(sound => sound.assetType = AssetType.Audio);\r\n\r\n        // resiger all given sounds\r\n        Sound.getAssetLoader().registerAsset(Sound, ...sounds);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/asset/Sound.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './input/Input';\n\n\n// WEBPACK FOOTER //\n// ./src/client/input.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Singleton } from '../../shared/helper';\r\n\r\nexport interface InputArrowKeys {\r\n\r\n    left: boolean;\r\n    right: boolean;\r\n    up: boolean;\r\n    down: boolean;\r\n}\r\n\r\n/**\r\n * a basic class to get user input like keybord or mouse data\r\n */\r\nexport class Input extends Singleton {\r\n\r\n    /**\r\n     * the currently pressed keys\r\n     */\r\n    private currentKeyInput: number[] = [];\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        // add events\r\n        this.addEventListener();\r\n\r\n        // bind singleton\r\n        Input.bindInstance(this);\r\n    }\r\n\r\n    /**\r\n     * add window events to captcher user input\r\n     */\r\n    private addEventListener(): void {\r\n\r\n        window.addEventListener('keydown', this.onKeydown.bind(this));\r\n        window.addEventListener('keyup', this.onKeyUp.bind(this));\r\n    }\r\n\r\n    /**\r\n     * reset all keys\r\n     */\r\n    private restoreKeys(): void {\r\n\r\n        this.currentKeyInput = [];\r\n    }\r\n\r\n    /**\r\n     * fires on user key input\r\n     *\r\n     * @param event the event\r\n     */\r\n    private onKeydown(event: KeyboardEvent): void {\r\n\r\n        // add the key to the stack\r\n        if (this.currentKeyInput.indexOf(event.keyCode) === -1)\r\n            this.currentKeyInput.push(event.keyCode);\r\n    }\r\n\r\n    /**\r\n     * fires if the user stop pressing one key\r\n     *\r\n     * @param event the event\r\n     */\r\n    private onKeyUp(event: KeyboardEvent): void {\r\n\r\n        // removes the code from the key input\r\n        this.currentKeyInput.splice(this.currentKeyInput.indexOf(event.keyCode), 1);\r\n    }\r\n\r\n    /**\r\n     * get the current user input for arrow keys\r\n     */\r\n    public getArrowKeys(): InputArrowKeys {\r\n\r\n        return <InputArrowKeys>{\r\n            down: this.currentKeyInput.indexOf(40) !== -1,\r\n            up: this.currentKeyInput.indexOf(38) !== -1,\r\n            left: this.currentKeyInput.indexOf(37) !== -1,\r\n            right: this.currentKeyInput.indexOf(39) !== -1\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/input/Input.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './render/Renderer';\r\nexport * from './render/CanvasRenderer';\r\nexport * from './render/BasicRenderer';\n\n\n// WEBPACK FOOTER //\n// ./src/client/render.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Renderer } from '../render/Renderer';\r\nimport { Dimension } from '../../shared/math';\r\nimport { Log } from '../../shared/log';\r\nimport { Image, AssetLoader, AssetType } from '../asset';\r\nimport { BasicRenderer } from '../render/BasicRenderer';\r\nimport { ClientConfig } from '../ClientConfig';\r\n\r\nimport { RamStorage } from '../../shared/storage';\r\n\r\nconst FPS_OFFSET = 25;\r\n\r\n/**\r\n * a game renderer based on the html canvas element\r\n */\r\nexport class CanvasRenderer extends BasicRenderer implements Renderer {\r\n\r\n    /**\r\n     * the holder of the canvas element\r\n     */\r\n    private canvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * the 2d rendering context of the game canvas\r\n     */\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * the asset loader instance\r\n     */\r\n    private assetLoader: AssetLoader;\r\n\r\n    /**\r\n     * the game height and width holder\r\n     */\r\n    private gameDimension: Dimension;\r\n\r\n    /**\r\n     * holder of the client config\r\n     */\r\n    private clientConfig: ClientConfig;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // get the asset loader\r\n        this.assetLoader = AssetLoader.getInstance<AssetLoader>();\r\n\r\n        // bind the instance\r\n        CanvasRenderer.bindInstance(this);\r\n    }\r\n\r\n    /**\r\n     * set up the game environment to a given dimension\r\n     */\r\n    public setup(clientConfig: ClientConfig): void {\r\n\r\n        // call super function\r\n        super.setup(clientConfig);\r\n        this.clientConfig = clientConfig;\r\n\r\n        // save the dimension and create the canvas\r\n        this.gameDimension = clientConfig.gameDimension;\r\n        this.createCanvas();\r\n\r\n        // get the 2d context\r\n        this.ctx = this.canvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * print the current fps on the screen\r\n     *\r\n     * @param fps the current fps\r\n     */\r\n    protected printFps(): void {\r\n\r\n        // print only if the user want this\r\n        if (!this.clientConfig.printFps) return;\r\n\r\n        // calculate the fps\r\n        this.calculateFps();\r\n\r\n        // write the fps number to the canvas context\r\n        this.ctx.fillStyle = \"white\";\r\n        this.ctx.font = \"30px Arial\";\r\n        this.ctx.textAlign = \"center\";\r\n        this.ctx.fillText(this.fps.fps.toFixed(0), FPS_OFFSET, FPS_OFFSET);\r\n\r\n        // black stroke\r\n        this.ctx.strokeStyle = \"black\";\r\n        this.ctx.font = \"361x Arial\";\r\n        this.ctx.textAlign = \"center\";\r\n        this.ctx.strokeText(this.fps.fps.toFixed(0), FPS_OFFSET, FPS_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * creates the canvas element and append it to the given parentNode\r\n     */\r\n    private createCanvas(): void {\r\n\r\n        // create the canvas\r\n        this.canvas = document.createElement('canvas');\r\n        document.body.appendChild(this.canvas);\r\n\r\n        // apply the game dimension\r\n        this.canvas.setAttribute('width', `${this.gameDimension.x}px`);\r\n        this.canvas.setAttribute('height', `${this.gameDimension.y}px`);\r\n        this.canvas.setAttribute('style', 'display:block;position:absolute;');\r\n    }\r\n\r\n    /**\r\n     * the method where all the magic takes place. called in gameloop\r\n     * to render all entities and other stuff\r\n     */\r\n    public render(): void {\r\n\r\n        // clear the current canvas\r\n        this.ctx.fillStyle = '#ffffff';\r\n        this.ctx.fillRect(0, 0, this.gameDimension.x, this.gameDimension.y);\r\n\r\n        // get all entities that shoule be visible by the client\r\n        // @todo: only render entitites that are visible by the camera\r\n        let visibleEntities = this.getRenderableEntities();\r\n\r\n        // render the entity at its center point\r\n        visibleEntities.forEach(entity => {\r\n\r\n            // draw the entity\r\n            this.ctx.drawImage(\r\n\r\n                // get the image of the entity\r\n                this.assetLoader.getAsset<Image>(\r\n                    entity.getImage(), AssetType.Image\r\n                ).getData(),\r\n\r\n                entity.getPosition().x,\r\n                entity.getPosition().y\r\n            );\r\n        });\r\n\r\n        // print fps\r\n        this.printFps();\r\n\r\n        // fps update\r\n        this.fps.lastUpdate = +new Date();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/render/CanvasRenderer.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './environment/Viewport';\n\n\n// WEBPACK FOOTER //\n// ./src/client/environment.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Dimension } from '../../shared/math';\r\n\r\n/**\r\n * a class to handle the window viewport things like\r\n * getting the player's screen width and height\r\n */\r\nexport class Viewport {\r\n\r\n    /**\r\n     * getting the current window dimension\r\n     */\r\n    public static getWindowDimension(): Dimension {\r\n\r\n        return new Dimension(\r\n            window.innerWidth,\r\n            window.innerHeight\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/environment/Viewport.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { CollidableEntity } from '../../client/entity';\r\nimport { Vector2D } from '../../shared/math';\r\nimport { CollisionType } from '../../shared/collision';\r\n\r\n/**\r\n * the player entity\r\n */\r\nexport class Player extends CollidableEntity {\r\n\r\n    constructor() {\r\n\r\n        super(20, 20, new Vector2D(10, 10));\r\n\r\n        // add the animations for the player\r\n        this.addAnimation({\r\n            name: 'idle',\r\n            sprite: 'player',\r\n            states: [\r\n                { image: 'red_eyes_open', duration: 2500 },\r\n                { image: 'red_eyes_closed', duration: 250 },\r\n                { image: 'red_eyes_open', duration: 250 },\r\n                { image: 'red_eyes_closed', duration: 250 }\r\n            ]\r\n        }, {\r\n                name: 'jump',\r\n                sprite: 'player',\r\n                states: [\r\n                    { image: 'red_mouth_open', duration: -1 }\r\n                ]\r\n            });\r\n    }\r\n\r\n    /**\r\n     * get the entities collision type\r\n     */\r\n    public getCollisionType(): CollisionType {\r\n\r\n        return CollisionType.Circle;\r\n    }\r\n\r\n    /**\r\n     * an event handler that will fire if another entity collided with this instance\r\n     */\r\n    public onCollision(otherEntity: CollidableEntity): void {\r\n\r\n        console.log(this, \"collided with\", otherEntity);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/example/entity/Player.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './collision/CollisionType';\n\n\n// WEBPACK FOOTER //\n// ./src/shared/collision.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * an enumeration for all available collision types\r\n */\r\nexport enum CollisionType {\r\n\r\n    Circle, Rectangle, RotatedRectangle\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/collision/CollisionType.ts"],"sourceRoot":""}