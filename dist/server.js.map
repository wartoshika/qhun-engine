{"version":3,"sources":["webpack:///webpack/bootstrap ec559d99652c737212f4","webpack:///./shared/log/index.ts","webpack:///./shared/math/index.ts","webpack:///./shared/log/Log.ts","webpack:///./shared/helper/Singleton.ts","webpack:///./shared/storage/index.ts","webpack:///./shared/helper/index.ts","webpack:///./shared/log/LogLevel.ts","webpack:///./shared/storage/RamStorage.ts","webpack:///external \"object-sizeof\"","webpack:///./shared/math/Helper.ts","webpack:///./shared/math/Dimension.ts","webpack:///./shared/helper/File.ts","webpack:///./shared/event/index.ts","webpack:///./shared/event/EventName.ts","webpack:///./shared/polyfill.ts","webpack:///./shared","webpack:///./shared/entity/Entity.ts","webpack:///./server/Server.ts","webpack:///./server/web.ts","webpack:///./server/web/Webserver.ts","webpack:///./server/web/index.html","webpack:///external \"http\"","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./shared/math/Vector2D.ts","webpack:///./shared/event/EventEmitter.ts","webpack:///./shared/event/Event.ts","webpack:///./server/network.ts","webpack:///./server/network/NetworkServer.ts","webpack:///external \"socket.io\"","webpack:///./shared/index.ts","webpack:///./shared/collision/index.ts","webpack:///./shared/collision/CollisionType.ts","webpack:///./shared/decorator/index.ts","webpack:///./shared/decorator/logMethodCall.ts","webpack:///./shared/decorator/collectGarbage.ts","webpack:///./shared/helper/Binary.ts","webpack:///./shared/helper/GarbageCollector.ts","webpack:///./shared/decorator/enableGarbageCollection.ts","webpack:///./shared/entity/index.ts","webpack:///./shared/entity/CanCollide.ts","webpack:///./shared/entity/CollidableEntity.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec559d99652c737212f4","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './LogLevel';\r\nexport * from './Log';\n\n\n// WEBPACK FOOTER //\n// ./shared/log/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './Helper';\r\nexport * from './Vector2D';\r\nexport * from './Dimension';\n\n\n// WEBPACK FOOTER //\n// ./shared/math/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { LogLevel } from './LogLevel';\r\nimport { Singleton } from '../helper/Singleton';\r\nimport { RamStorage } from '../storage/RamStorage';\r\n\r\n/**\r\n * a log wrapper to allow log levels and a more complex\r\n * logging structure\r\n */\r\nexport class Log extends Singleton {\r\n\r\n    /**\r\n     * the current log prefix\r\n     */\r\n    private prefix: string = \"\";\r\n\r\n    // the current loglevel\r\n    protected logLevel: LogLevel = LogLevel.Debug;\r\n\r\n    /**\r\n     * sets the log level for the application environment\r\n     *\r\n     * @param level the new log level\r\n     */\r\n    public setLogLevel(level: LogLevel): void {\r\n\r\n        this.logLevel = level;\r\n    }\r\n\r\n    /**\r\n     * get the logger instance with prefixing for better\r\n     * detection\r\n     *\r\n     * @param prefix the prefix string\r\n     */\r\n    public static getLogger(prefix?: string): Log {\r\n\r\n        let instance = null;\r\n        if (!RamStorage.has(this.generateStorageName(prefix))) {\r\n\r\n            // get the constructor and store an instance of the class at the ram storage\r\n            let constructor = <{ new (): Log }><any>this;\r\n            let logger = new constructor();\r\n            logger.prefix = prefix;\r\n            RamStorage.add(this.generateStorageName(prefix), logger);\r\n        }\r\n\r\n        // get the instance\r\n        return RamStorage.get<Log>(this.generateStorageName(prefix));\r\n    }\r\n\r\n    /**\r\n     * override the generate storage name method to allow prefixing the\r\n     * log instance\r\n     *\r\n     * @param prefix the desired prefix\r\n     */\r\n    protected static generateStorageName(prefix?: string): string {\r\n\r\n        return `singleton.instance.${this.name}.${prefix}`;\r\n    }\r\n\r\n    /**\r\n     * logs the given data\r\n     *\r\n     * @param level the level to log in\r\n     * @param optionalPrefix the optional prefix\r\n     * @param params all params as vararg array\r\n     */\r\n    public log(level: LogLevel, ...params: any[]): void {\r\n\r\n        // log if the log level is ok\r\n        if (\r\n            parseInt(<any>level) >= parseInt(<any>this.logLevel)\r\n            &&\r\n            this.logLevel !== LogLevel.None\r\n        ) {\r\n\r\n            let prefix = \"\";\r\n            if (this.prefix) {\r\n                prefix = `[${this.prefix}]`;\r\n            }\r\n\r\n            this.getLogFunctionByLevel(level)(\r\n                `[${this.constructor.name}.${LogLevel[level]}]${prefix}`, ...params\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets a callback function to log\r\n     *\r\n     * @param level the level to get the function from\r\n     */\r\n    protected getLogFunctionByLevel(level: LogLevel): Function {\r\n\r\n        let callback;\r\n\r\n        // go through the different log levels\r\n        switch (level) {\r\n\r\n            case LogLevel.Debug: callback = console.debug; break;\r\n            case LogLevel.Info: callback = console.info; break;\r\n            case LogLevel.Warning: callback = console.warn; break;\r\n            case LogLevel.Error: callback = console.error; break;\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * get the current log level\r\n     */\r\n    public getLogLevel(): LogLevel {\r\n\r\n        return this.logLevel;\r\n    }\r\n\r\n    /**\r\n     * logs as debug level\r\n     *\r\n     * @param optionalPrefix if this is a constructor, the log will pre prefixed with its name. if not, the param will just printed\r\n     * @param params all params as vararg array\r\n     */\r\n    public debug(...params: any[]): void {\r\n\r\n        this.log(LogLevel.Debug, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as info level\r\n     *\r\n     * @param optionalPrefix if this is a constructor, the log will pre prefixed with its name. if not, the param will just printed\r\n     * @param params all params as vararg array\r\n     */\r\n    public info(...params: any[]): void {\r\n\r\n        this.log(LogLevel.Info, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as warning level\r\n     *\r\n     * @param optionalPrefix if this is a constructor, the log will pre prefixed with its name. if not, the param will just printed\r\n     * @param params all params as vararg array\r\n     */\r\n    public warning(...params: any[]): void {\r\n\r\n        this.log(LogLevel.Warning, ...params);\r\n    }\r\n\r\n    /**\r\n     * logs as error level\r\n     *\r\n     * @param optionalPrefix if this is a constructor, the log will pre prefixed with its name. if not, the param will just printed\r\n     * @param params all params as vararg array\r\n     */\r\n    public error(...params: any[]): void {\r\n\r\n        this.log(LogLevel.Error, ...params);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/log/Log.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { RamStorage } from '../storage';\r\nimport { EventEmitter } from '../event';\r\n\r\n/**\r\n * a class to handle the singleton paradigmen\r\n */\r\nexport abstract class Singleton extends EventEmitter {\r\n\r\n    /**\r\n     * generates a storage name for the instance storing\r\n     *\r\n     * @param className the class name\r\n     */\r\n    protected static generateStorageName(): string {\r\n\r\n        return `singleton.instance.${this.name}`;\r\n    }\r\n\r\n    /**\r\n     * get the singleton instance\r\n     */\r\n    public static getInstance<T>(): T {\r\n\r\n        let instance = null;\r\n        if (!RamStorage.has(this.generateStorageName())) {\r\n\r\n            // get the constructor and store an instance of the class at the ram storage\r\n            let constructor = <{ new (): T }><any>this;\r\n            RamStorage.add(this.generateStorageName(), new constructor());\r\n        }\r\n\r\n        // get the instance\r\n        return RamStorage.get<T>(this.generateStorageName());\r\n    }\r\n\r\n    /**\r\n     * bind the instance to the singleton storage\r\n     *\r\n     * @param instance the instance that should be bound\r\n     */\r\n    protected static bindInstance(instance: any): void {\r\n\r\n        // save the instance\r\n        RamStorage.add(this.generateStorageName(), instance);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/helper/Singleton.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './RamStorage';\n\n\n// WEBPACK FOOTER //\n// ./shared/storage/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './Singleton';\r\nexport * from './Binary';\r\nexport * from './File';\r\nexport * from './GarbageCollector';\n\n\n// WEBPACK FOOTER //\n// ./shared/helper/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * a basic loglevel categorisation\r\n */\r\nexport enum LogLevel {\r\n    None, Debug, Info, Warning, Error\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/log/LogLevel.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n// the dependency to get the memory footprint ob stored objects\r\nlet sizeof = require('object-sizeof');\r\n\r\nimport { Helper } from '../math';\r\nimport { File, FileSizeType } from '../helper/File';\r\n\r\n/**\r\n * holds objects in the ram of the operating unit\r\n */\r\nexport class RamStorage {\r\n\r\n    // the private cache object\r\n    private static cache: {\r\n        [path: string]: any\r\n    } = {};\r\n\r\n    /**\r\n     * adds an elemement to the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     * @param elemement the element to store\r\n     */\r\n    public static add(path: string, elemement: any): void {\r\n\r\n        RamStorage.cache[path] = elemement;\r\n    }\r\n\r\n    /**\r\n     * removes an element from the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static remove(path: string): void {\r\n\r\n        delete RamStorage.cache[path];\r\n    }\r\n\r\n    /**\r\n     * reset the complete storage!\r\n     */\r\n    public static clear(): void {\r\n\r\n        this.cache = {};\r\n    }\r\n\r\n    /**\r\n     * removes all entires in the given path\r\n     *\r\n     * @param path the path to clear\r\n     * @return the amount of deleted objects\r\n     */\r\n    public static clearPath(path: string): number {\r\n\r\n        let counter = 0;\r\n\r\n        Object.keys(RamStorage.cache).forEach(key => {\r\n\r\n            // if the path is present\r\n            if (key.indexOf(path) === 0) {\r\n\r\n                // remove the part\r\n                delete RamStorage.cache[key];\r\n                counter++;\r\n            }\r\n        });\r\n\r\n        return counter;\r\n    }\r\n\r\n    /**\r\n     * get an element from the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static get<T>(path: string): T {\r\n\r\n        return <T>RamStorage.cache[path];\r\n    }\r\n\r\n    /**\r\n     * checks if an object exists in the cache\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static has(path: string): boolean {\r\n\r\n        return RamStorage.get(path) !== undefined;\r\n    }\r\n\r\n    /**\r\n     * the path to one or many objects in the storage\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static amount(path: string): number {\r\n\r\n        let counter = 0;\r\n        Object.keys(RamStorage.cache).forEach(key => {\r\n\r\n            // if the path is present, update counter\r\n            if (key.indexOf(path) === 0) counter++;\r\n        });\r\n\r\n        return counter;\r\n    }\r\n\r\n    /**\r\n     * calculates the used memory for the selected objects in the storage.\r\n     *\r\n     * @param path the path to the object. dots can be used to structure\r\n     */\r\n    public static getSize(path: string = \"\", type: FileSizeType = FileSizeType.Byte): number {\r\n\r\n        let byteCounter = 0;\r\n        Object.keys(RamStorage.cache).forEach(key => {\r\n\r\n            // if the path is present, update counter\r\n            if (key.indexOf(path) === 0) byteCounter += sizeof(RamStorage.cache[key]);\r\n        });\r\n\r\n        let bytes = File.byteToSize(byteCounter, type);\r\n        return Helper.roundToPrecision(bytes, 2);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/storage/RamStorage.ts","module.exports = require(\"object-sizeof\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"object-sizeof\"\n// module id = 8\n// module chunks = 0","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * the newton units as seperate type for a better readabillity\r\n */\r\nexport declare type newtons = number;\r\n\r\n/**\r\n * simple math helper class\r\n */\r\nexport class Helper {\r\n\r\n    /**\r\n     * calculates a random degree\r\n     */\r\n    public static randomDegree(): number {\r\n\r\n        return Math.floor(Math.random() * 359) + 1;\r\n    }\r\n\r\n    /**\r\n     * transforms a degree number to radian number\r\n     *\r\n     * @param degree the given degree\r\n     */\r\n    public static degreeToRadian(degree: number): number {\r\n\r\n        return degree * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * transforms a radian number to degree\r\n     *\r\n     * @param radian the radian value\r\n     */\r\n    public static radianToDegree(radian: number): number {\r\n\r\n        return radian * (180 / Math.PI);\r\n    }\r\n\r\n    /**\r\n     * rounds to a given precision\r\n     *\r\n     * @param number the number to round\r\n     * @param precision the precision\r\n     */\r\n    public static roundToPrecision(number: number, precision: number = 2): number {\r\n\r\n        return +number.toFixed(precision);\r\n    }\r\n\r\n    /**\r\n     * converts mass to newtons based on a given force\r\n     *\r\n     * @param mass the mass of the object\r\n     * @param force the gravity force\r\n     */\r\n    public static massToWeight(mass: number, force: number): newtons {\r\n\r\n        return mass * force;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/math/Helper.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * a basic holder of x and y values as one datatype\r\n */\r\nexport class Dimension {\r\n\r\n    /**\r\n     *\r\n     * @param x the x coordinate\r\n     * @param y the y coordinate\r\n     */\r\n    constructor(\r\n        public x: number = 0,\r\n        public y: number = 0\r\n    ) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/math/Dimension.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport enum FileSizeType {\r\n    Byte, Kilobyte, Megabyte, Gigabyte, Terrabyte,\r\n}\r\n\r\n/**\r\n * a helper class for file and path things\r\n */\r\nexport class File {\r\n\r\n    /**\r\n     * get the file extension of a path\r\n     *\r\n     * @param path the path to the file\r\n     */\r\n    public static getFileExtension(path: string) {\r\n\r\n        return path.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * converts a byle number to a given superset\r\n     *\r\n     * @param bytes the base byte number\r\n     * @param type the wanted type\r\n     */\r\n    public static byteToSize(bytes: number, type: FileSizeType): number {\r\n\r\n        return bytes / Math.pow(1024, <number>type);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/helper/File.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './EventName';\r\nexport * from './EventEmitter';\r\nexport * from './Event';\n\n\n// WEBPACK FOOTER //\n// ./shared/event/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport enum EventName {\r\n\r\n    BeforePreload = <any>\"BeforePreload\",\r\n    AfterPreload = <any>\"AfterPreload\",\r\n\r\n    BeforeAssetLoading = <any>\"BeforeAssetLoading\",\r\n    AfterAssetLoading = <any>\"AfterAssetLoading\",\r\n\r\n    BeforeLoaded = <any>\"BeforeLoaded\",\r\n    AfterLoaded = <any>\"AfterLoaded\"\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/event/EventName.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nfunction isNodeEnv(): boolean {\r\n\r\n    return typeof global !== 'undefined';\r\n}\r\n\r\nfunction isBrowserEnv(): boolean {\r\n\r\n    return typeof window !== 'undefined';\r\n}\r\n\r\ninterface IPolyfill {\r\n\r\n    require: string;\r\n    fills: string;\r\n}\r\n\r\n/**\r\n * loads a polyfill if the object was not found\r\n */\r\nexport function polyfill(...modules: IPolyfill[]): void {\r\n\r\n    modules.forEach(_module => {\r\n\r\n        if (isNodeEnv()) {\r\n\r\n            // load node polyfill\r\n            (<any>global)[_module.fills] = require(_module.require);\r\n\r\n        } else if (isBrowserEnv()) {\r\n\r\n            // load browser polyfill\r\n            (<any>window)[_module.fills] = require(_module.require);\r\n        }\r\n\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/polyfill.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./shared\n// module id = 15\n// module chunks = 0","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Vector2D } from '../math';\r\n\r\n/**\r\n * the base class for all game entities\r\n */\r\nexport abstract class Entity {\r\n\r\n    constructor(\r\n        protected position: Vector2D = new Vector2D(0, 0)\r\n    ) { }\r\n\r\n    /**\r\n     * get the current position of the entity ( top left )\r\n     */\r\n    public getPosition(): Vector2D {\r\n\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * set the entities new position\r\n     *\r\n     * @param position the new position\r\n     */\r\n    public setPosition(position: Vector2D): void {\r\n\r\n        this.position = position;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/entity/Entity.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Webserver } from './web';\r\nimport { NetworkServer } from './network';\r\nimport { ServerConfig } from './ServerConfig';\r\nimport { LogLevel, Log } from '../shared';\r\n\r\n/**\r\n * the game server main class. loads all important things\r\n * and also provides a buildin webserver to serve the app\r\n */\r\nexport class Server {\r\n\r\n    private webserver: Webserver;\r\n    private network: NetworkServer;\r\n\r\n    /**\r\n     * logger instance\r\n     */\r\n    private logger = Log.getLogger(Server.name);\r\n\r\n    constructor(\r\n        private serverConfig: ServerConfig\r\n    ) {\r\n\r\n        // set the log level\r\n        this.logger.setLogLevel(serverConfig.logLevel);\r\n\r\n        // start the webserver\r\n        this.webserver = new Webserver(\r\n            serverConfig.webAdress,\r\n            serverConfig.webPort\r\n        );\r\n\r\n        // start network\r\n        this.network = new NetworkServer(\r\n            this.webserver.getApplication()\r\n        );\r\n    }\r\n}\r\n\r\n// start the webserver\r\nnew Server({\r\n    webAdress: '127.0.0.1',\r\n    webPort: 3000,\r\n    logLevel: LogLevel.Debug\r\n});\n\n\n// WEBPACK FOOTER //\n// ./server/Server.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './web/Webserver';\n\n\n// WEBPACK FOOTER //\n// ./server/web.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n// need the index file in the build directory\r\nrequire('file-loader?name=[name].[ext]!./index.html');\r\n\r\nimport * as http from 'http';\r\nimport * as express from 'express';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nimport { Log } from '../../shared/log';\r\n\r\n/**\r\n * the buildin webserver to serve the client\r\n */\r\nexport class Webserver {\r\n\r\n    private app: any;\r\n    private httpServer: http.Server;\r\n\r\n    /**\r\n     * the logger instance\r\n     */\r\n    private logger = Log.getLogger(Webserver.name);\r\n\r\n    constructor(\r\n        listenAdress: string = \"127.0.0.1\",\r\n        port: number = 3000,\r\n        app: express.Application = express()\r\n    ) {\r\n        // setup server\r\n        this.httpServer = http.createServer(app);\r\n\r\n        // start listening\r\n        this.httpServer.listen(port, listenAdress);\r\n        this.logger.info(\"Listening at \", `${listenAdress}:${port}`);\r\n\r\n        // handle http calls\r\n        app.get('/*', this.serveApplication.bind(this));\r\n    }\r\n\r\n    /**\r\n     * handles incomming file calls\r\n     *\r\n     * @param request\r\n     * @param response\r\n     */\r\n    private serveApplication(\r\n        request: any, response: express.Response\r\n    ): void {\r\n\r\n        // get the requested file from the request object\r\n        let file = request.url;\r\n        if (file === \"/\")\r\n            file = \"index.html\";\r\n\r\n        // @todo: do not serve the server.js file for security reasons!\r\n        // get the file and send it back to the client\r\n        let absolutePath = path.resolve(`./dist/${file}`);\r\n\r\n        try {\r\n\r\n            response.type(file.split('.').pop());\r\n            response.send(fs.readFileSync(absolutePath));\r\n        } catch (e) {\r\n\r\n            response.sendStatus(404);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets the current express application\r\n     *\r\n     * @return the passed through app at constructing time or a newly created app if no parameter was given during constructing\r\n     */\r\n    public getApplication(): express.Application {\r\n\r\n        return this.app;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./server/web/Webserver.ts","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/file-loader?name=[name].[ext]!./server/web/index.html\n// module id = 20\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 24\n// module chunks = 0","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Helper } from './Helper';\r\nimport { Dimension } from './Dimension';\r\n\r\n/**\r\n * represents a 2D vector with x and y coordinates.\r\n */\r\nexport class Vector2D<T extends number = number> extends Dimension {\r\n\r\n    /**\r\n     *\r\n     * @param x the x coordinate\r\n     * @param y the y coordinate\r\n     */\r\n    constructor(\r\n        x: T = <T>0,\r\n        y: T = <T>0\r\n    ) {\r\n        super(x, y);\r\n    }\r\n\r\n    /**\r\n     * helper method to get vector instances\r\n     *\r\n     * @param x the x value\r\n     * @param y the y value. if no y value is present, x and y will come from x\r\n     */\r\n    public static from<T extends number = number>(x: T, y?: T): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(x, y !== undefined ? y : x);\r\n    }\r\n\r\n    /**\r\n     * adds another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public add(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x + vector.x),\r\n            <T>(this.y + vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * substract another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public substract(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x - vector.x),\r\n            <T>(this.y - vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * divide another vector\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public divide(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x / vector.x),\r\n            <T>(this.y / vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * multiply two vectors\r\n     *\r\n     * @param vector the other vector\r\n     */\r\n    public multiply(vector: Vector2D<T>): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(this.x * vector.x),\r\n            <T>(this.y * vector.y)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * rounds the vector to a given precision\r\n     */\r\n    public round(precision: number = 2): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(\r\n            <T>(Helper.roundToPrecision(this.x, precision)),\r\n            <T>(Helper.roundToPrecision(this.y, precision))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * calculates the distance of two vector points\r\n     *\r\n     * @param otherVector the other vector calculate to\r\n     * @return the distance in pixel\r\n     */\r\n    public distanceToVector(otherVector: Vector2D<T>): number {\r\n\r\n        return Math.sqrt(\r\n            Math.pow((this.x - otherVector.x), 2)\r\n            +\r\n            Math.pow((this.y - otherVector.y), 2)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * get the current vector divided by 2\r\n     */\r\n    public half(): Vector2D<T> {\r\n\r\n        return this.divide(new Vector2D(2, 2));\r\n    }\r\n\r\n    /**\r\n     * get the current vector multiply by 2\r\n     */\r\n    public double(): Vector2D<T> {\r\n\r\n        return this.multiply(new Vector2D<T>(<T>2, <T>2));\r\n    }\r\n\r\n    /**\r\n     * Math.abs() on x and y\r\n     */\r\n    public abs(): Vector2D<T> {\r\n\r\n        return new Vector2D<T>(<T>Math.abs(this.x), <T>Math.abs(this.y));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/math/Vector2D.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { EventName } from './EventName';\r\nimport { RamStorage } from '../storage';\r\n\r\n// the type for storing event listeners\r\ndeclare type eventListener = {\r\n    [eventName: string]: Function[]\r\n};\r\n\r\n/**\r\n * a class that can emit events and can add listeners to events\r\n */\r\nexport abstract class EventEmitter<E = EventName> {\r\n\r\n    /**\r\n     * listen on the given event\r\n     *\r\n     * @param event the desired event\r\n     * @param listener the listener function\r\n     */\r\n    public on(event: E, listener: Function): this {\r\n\r\n        // first get all listeners\r\n        let listeners = RamStorage.get<eventListener>(EventEmitter.name);\r\n\r\n        // check if listeners is defined\r\n        if (!listeners) {\r\n            listeners = {};\r\n        }\r\n\r\n        // create array context if not allready done\r\n        if (!Array.isArray(listeners[<any>event])) {\r\n\r\n            listeners[<any>event] = [];\r\n        }\r\n\r\n        // stack it up\r\n        listeners[<any>event].push(listener);\r\n\r\n        // save it back to the storage\r\n        RamStorage.add(EventEmitter.name, listeners);\r\n\r\n        // chaning context\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * emit an event\r\n     *\r\n     * @param event the event name\r\n     * @param listenerBoundContext this context of the executed function. default: null\r\n     * @param args optional parameter to pass to the listener function\r\n     */\r\n    public emit(event: E, listenerBoundContext?: object, ...args: any[]): this {\r\n\r\n        // get all listeners for this event\r\n        let listeners = RamStorage.get<eventListener>(EventEmitter.name);\r\n\r\n        // is listeners defined?\r\n        if (!listeners) {\r\n\r\n            // cancel\r\n            return this;\r\n        }\r\n\r\n        // get all functions for this event\r\n        let eventFunctions = listeners[<any>event];\r\n\r\n        // are there any?\r\n        if (Array.isArray(eventFunctions)) {\r\n\r\n            // execute them\r\n            eventFunctions.forEach((ev: Function) => {\r\n\r\n                // take the context or no context\r\n                if (!listenerBoundContext)\r\n                    listenerBoundContext = {};\r\n\r\n                // call it\r\n                ev.apply(listenerBoundContext, args);\r\n            });\r\n        }\r\n\r\n        // chaning context\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * get all registered listeners for the given event\r\n     *\r\n     * @param event the event to get the listeners for\r\n     */\r\n    public getListeners(event: E): Function[] {\r\n\r\n        // get all listeners from the storage\r\n        let listeners = RamStorage.get<eventListener>(EventEmitter.name);\r\n\r\n        // check if the event has listeners\r\n        if (!listeners) return [];\r\n        else if (!listeners[<any>event]) return [];\r\n\r\n        // return the listeners\r\n        return listeners[<any>event];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/event/EventEmitter.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport interface Event { }\n\n\n// WEBPACK FOOTER //\n// ./shared/event/Event.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './network/NetworkServer';\n\n\n// WEBPACK FOOTER //\n// ./server/network.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport * as express from 'express';\r\nimport * as socketio from 'socket.io';\r\n\r\nimport { Log } from '../../shared/log';\r\n\r\n/**\r\n * the network base to use a client-server based structure\r\n * with websocket as transport protocol\r\n */\r\nexport class NetworkServer {\r\n\r\n    /**\r\n     * the servers socket\r\n     */\r\n    private socket: SocketIO.Server;\r\n\r\n    /**\r\n     * the logger instance\r\n     */\r\n    private logger = Log.getLogger(NetworkServer.name);\r\n\r\n    /**\r\n     *\r\n     * @param application the application to bind the websocket\r\n     */\r\n    constructor(\r\n        private application: express.Application\r\n    ) {\r\n\r\n\r\n        this.bindWebsocketToApplication();\r\n    }\r\n\r\n    /**\r\n     * binds a websocket to the applications router\r\n     */\r\n    private bindWebsocketToApplication(): void {\r\n\r\n        // init websocket and bind to application\r\n        this.socket = socketio(this.application);\r\n        this.logger.info(\"Websocket started\");\r\n    }\r\n\r\n    /**\r\n     * binds a callback function to an event of socketio\r\n     *\r\n     * @param eventName the event name you choose between server and client\r\n     * @param callback a function executed on event occur\r\n     */\r\n    public bindEvent(eventName: string, callback: Function): void {\r\n\r\n        // pass this to socketio\r\n        this.socket.on(eventName, callback);\r\n    }\r\n\r\n    /**\r\n     * bind a callback to a new connecting player\r\n     *\r\n     * @param callback the handler function\r\n     */\r\n    public bindNewConnectionEvent(callback: (socket: SocketIO.Socket) => void): void {\r\n\r\n        // pass this event to socketio\r\n        this.socket.on(\"connection\", callback);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./server/network/NetworkServer.ts","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 30\n// module chunks = 0","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './collision';\r\nexport * from './decorator';\r\nexport * from './entity';\r\nexport * from './helper';\r\nexport * from './log';\r\nexport * from './math';\r\nexport * from './storage';\r\nexport * from './event';\r\nexport * from './polyfill';\n\n\n// WEBPACK FOOTER //\n// ./shared/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './CollisionType';\n\n\n// WEBPACK FOOTER //\n// ./shared/collision/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\n/**\r\n * an enumeration for all available collision types\r\n */\r\nexport enum CollisionType {\r\n\r\n    Circle, Rectangle, RotatedRectangle\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/collision/CollisionType.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './logMethodCall';\r\nexport * from './collectGarbage';\r\nexport * from './enableGarbageCollection';\n\n\n// WEBPACK FOOTER //\n// ./shared/decorator/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Log } from '../log';\r\n\r\n/**\r\n * a decorator for logging method calls to debug console\r\n *\r\n * @param target\r\n * @param propertyKey\r\n * @param descriptor\r\n */\r\nexport function logMethodCall(\r\n    target: Object, key: string | symbol, descriptor: TypedPropertyDescriptor<Function>\r\n) {\r\n\r\n    // load the logger\r\n    const logger = Log.getInstance<Log>();\r\n\r\n    return {\r\n        value: function (...args: any[]) {\r\n\r\n            // log the call\r\n            logger.debug(\"@logMethodCall\", `${target.constructor.name}:${key}()`);\r\n\r\n            // original method call\r\n            return descriptor.value.apply(this, args);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/decorator/logMethodCall.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { EventName } from '../event';\r\nimport { GarbageCollector, File, FileSizeType } from '../helper';\r\nimport { Log } from '../log/Log';\r\n\r\nconst objectSizeof = require('object-sizeof');\r\n\r\n/**\r\n * a property decorator to define a phase in wich the property\r\n * will be emptied\r\n *\r\n * @param event property will be cleared on the defined event\r\n * @param clearVal the new value that will be the property value\r\n */\r\nexport function collectGargabe(event: EventName, cleanVal?: any): PropertyDecorator {\r\n\r\n    return (target: Object, propertyKey: string | symbol) => {\r\n\r\n        // the collector function\r\n        let collectGarbage = (targets: object[]) => {\r\n\r\n            // for size calc\r\n            let size = 0;\r\n\r\n            // iterate all targets\r\n            targets.forEach(target => {\r\n\r\n                // cleck if property exists\r\n                if ((<any>target)[propertyKey]) {\r\n\r\n                    //clean it!\r\n                    size += objectSizeof((<any>target)[propertyKey]);\r\n                    (<any>target)[propertyKey] = cleanVal;\r\n                }\r\n            });\r\n\r\n            // print log\r\n            Log.getLogger('@' + collectGargabe.name).debug(\r\n                \"cleared\", File.byteToSize(size, FileSizeType.Kilobyte) + \"KB\"\r\n            )\r\n        };\r\n\r\n        // register the deletion event in the garbage collector\r\n        let collector = GarbageCollector.getInstance<GarbageCollector>();\r\n        collector.registerCleaning({\r\n            event: event,\r\n            ctor: target.constructor,\r\n            cleanFunction: collectGarbage\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/decorator/collectGarbage.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { polyfill } from '../polyfill';\r\n\r\npolyfill(\r\n    { require: \"atob\", fills: \"atob\" },\r\n    { require: \"w3c-blob\", fills: \"Blob\" }\r\n);\r\n\r\n/**\r\n * a helper class for binary content\r\n */\r\nexport class Binary {\r\n\r\n    /**\r\n     * converts a data uri to a blob\r\n     *\r\n     * @param dataUri the data uri from the object\r\n     */\r\n    public static dataUriToBlob(dataUri: string): Blob {\r\n\r\n        // @see https://stackoverflow.com/questions/12168909/blob-from-dataurl\r\n        // convert base64 to raw binary data held in a string\r\n        // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n        let byteString = atob(dataUri.split(',')[1]);\r\n\r\n        // separate out the mime component\r\n        let mimeString = dataUri.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n        // write the bytes of the string to an ArrayBuffer\r\n        let ab = new ArrayBuffer(byteString.length);\r\n\r\n        // create a view into the buffer\r\n        let ia = new Uint8Array(ab);\r\n\r\n        // set the bytes of the buffer to the correct values\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n\r\n        // write the ArrayBuffer to a blob, and you're done\r\n        let blob = new Blob([ab], { type: mimeString });\r\n        return blob;\r\n    }\r\n\r\n    /**\r\n     * converts a binary buffer into a string\r\n     *\r\n     * @param buffer the binary content\r\n     */\r\n    public static bufferToString(buffer: Buffer): string {\r\n\r\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\r\n    }\r\n\r\n    /**\r\n     * converts a buffer to a blob instance\r\n     *\r\n     * @param buffer the buffer\r\n     */\r\n    public static bufferToBlob(buffer: Buffer | ArrayBuffer): Blob {\r\n\r\n        if (buffer instanceof ArrayBuffer) {\r\n\r\n            // cast to buffer\r\n            buffer = Buffer.from(buffer);\r\n        }\r\n        return new Blob([new Uint8Array(buffer)]);\r\n    }\r\n\r\n    /**\r\n     * converts a data uri to a buffer\r\n     *\r\n     * @param dataUri the given data uri\r\n     */\r\n    public static dataUriToBuffer(dataUri: string): Buffer {\r\n\r\n        let binStr = atob(dataUri);\r\n\r\n        // create a uint8array to store the characters\r\n        let array = new Uint8Array(binStr.length);\r\n\r\n        // add each char from the binary string\r\n        for (let i = 0; i < binStr.length; i++) {\r\n\r\n            array[i] = binStr.charCodeAt(i);\r\n        }\r\n\r\n        // finally\r\n        return Buffer.from(array.buffer);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/helper/Binary.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Singleton } from './Singleton';\r\nimport { EventName } from '../event/EventName';\r\nimport { Log } from '../log/Log';\r\n\r\ninterface CleanTask {\r\n    event: EventName,\r\n    ctor: Function,\r\n    callbackArguments?: string[],\r\n    cleanFunction(targets: object[], ...callbackArguments: string[]): void;\r\n}\r\n\r\n/**\r\n * an internal garbage collector class to clear some memory for the\r\n * user.\r\n */\r\nexport class GarbageCollector extends Singleton {\r\n\r\n    /**\r\n     * holder of all registered targets for cleaning\r\n     */\r\n    private registeredTargets: {\r\n        [constructorName: string]: object[]\r\n    } = {};\r\n\r\n    /**\r\n     * the stack of all registered garbage collection processes\r\n     */\r\n    private registerStack: CleanTask[] = [];\r\n\r\n    /**\r\n     * the logger instance\r\n     */\r\n    private logger = Log.getLogger(GarbageCollector.name);\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        // register all events\r\n        Object.keys(EventName).forEach(event => {\r\n\r\n            // register event and execute the cleaning\r\n            let eventEnum = <EventName><any>event;\r\n\r\n            // register the event\r\n            this.on(eventEnum, this.executeEvent.bind(this, eventEnum));\r\n        });\r\n\r\n        // bind instance\r\n        GarbageCollector.bindInstance(this);\r\n    }\r\n\r\n    /**\r\n     * register a property to be cleaned if a specific event occurs\r\n     *\r\n     * @param cleaning the nessesary objects to clean something\r\n     */\r\n    public registerCleaning(cleaning: CleanTask) {\r\n\r\n        this.registerStack.push(cleaning);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ctorName the constructor name of the class\r\n     * @param target the target class as instance\r\n     */\r\n    public addTarget(ctorName: string, target: object): void {\r\n\r\n        if (!Array.isArray(this.registeredTargets[ctorName])) {\r\n\r\n            this.registeredTargets[ctorName] = [];\r\n        }\r\n\r\n        this.registeredTargets[ctorName].push(target);\r\n    }\r\n\r\n    /**\r\n     * get all targets by its constructor function\r\n     */\r\n    private getTargets(cleanTask: CleanTask): object[] {\r\n\r\n        // no targets available?\r\n        if (!this.registeredTargets[cleanTask.ctor.name]) {\r\n\r\n            // log a warning message\r\n            this.logger.warning(\r\n                \"Trying to clean at class\", cleanTask.ctor.name,\r\n                \"but there aren't any registered targets.\",\r\n                \"Please be sure you decorated the class with @enableGarbageCollection\"\r\n            );\r\n\r\n            // no targets found!\r\n            return [];\r\n        }\r\n\r\n        // get all of them!\r\n        return this.registeredTargets[cleanTask.ctor.name];\r\n    }\r\n\r\n    /**\r\n     * execute the garbage collector at the given event\r\n     */\r\n    private executeEvent(eventName: EventName): void {\r\n\r\n        this.registerStack\r\n            .filter(clean => clean.event === eventName)\r\n            .forEach(clean => clean\r\n                // call clear function for every listener\r\n                .cleanFunction(\r\n                // get all targets to clear\r\n                this.getTargets(clean),\r\n                // pass the callback args to the function if available\r\n                ...(clean.callbackArguments ? clean.callbackArguments : [])\r\n                ));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/helper/GarbageCollector.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { GarbageCollector } from '../helper';\r\n\r\n/**\r\n * a class decorator that enabled garbage collecting on this class.\r\n * this is required to use @collectGarbage as property decorator\r\n */\r\nexport function enableGarbageCollection<T extends { new (...args: any[]): {} }>(ctor: T) {\r\n\r\n    return class extends ctor {\r\n\r\n        constructor(...args: any[]) {\r\n            super();\r\n\r\n            // register the instance at the gc\r\n            let gc = GarbageCollector.getInstance<GarbageCollector>();\r\n            gc.addTarget(ctor.name, this);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/decorator/enableGarbageCollection.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport * from './CanCollide';\r\nexport * from './Entity';\r\nexport * from './CollidableEntity';\n\n\n// WEBPACK FOOTER //\n// ./shared/entity/index.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { CollisionType } from '../collision';\r\nimport { CollidableEntity } from '../entity/CollidableEntity';\r\n\r\n/**\r\n * an interface that mark an entity as collidable with other\r\n * collidable entities\r\n */\r\nexport interface CanCollide {\r\n\r\n    /**\r\n     * get the entities collision type\r\n     */\r\n    getCollisionType(): CollisionType;\r\n\r\n    /**\r\n     * an event handler that will fire if another entity collided with this instance\r\n     */\r\n    onCollision(otherEntity: CollidableEntity): void;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/entity/CanCollide.ts","/**\r\n * Copyright (c) 2017 Oliver Warrings <dev@qhun.de>\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Entity } from '../entity/Entity';\r\nimport { CanCollide } from '../entity/CanCollide';\r\nimport { CollisionType } from '../collision';\r\nimport { Vector2D } from '../math';\r\n\r\n/**\r\n * an entity that can collide with other collidable entities\r\n */\r\nexport abstract class CollidableEntity extends Entity implements CanCollide {\r\n\r\n    constructor(\r\n        private entityWidth: number,\r\n        private entityHeight: number,\r\n        position: Vector2D = Vector2D.from(0, 0)\r\n    ) {\r\n        super(position);\r\n    }\r\n\r\n    /**\r\n     * get the entities collision type\r\n     */\r\n    public abstract getCollisionType(): CollisionType;\r\n\r\n    /**\r\n     * an event handler that will fire if another entity collided with this instance\r\n     */\r\n    public abstract onCollision(otherEntity: CollidableEntity): void;\r\n\r\n    /**\r\n     * get the width of the entity\r\n     */\r\n    public getWidth(): number {\r\n\r\n        return this.entityWidth;\r\n    }\r\n\r\n    /**\r\n     * get the height of the entity\r\n     */\r\n    public getHeight(): number {\r\n\r\n        return this.entityHeight;\r\n    }\r\n\r\n    /**\r\n     * get the width of the entity\r\n     */\r\n    public setWidth(width: number): void {\r\n\r\n        this.entityWidth = width;\r\n    }\r\n\r\n    /**\r\n     * get the height of the entity\r\n     */\r\n    public setHeight(height: number): void {\r\n\r\n        this.entityHeight = height;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./shared/entity/CollidableEntity.ts"],"sourceRoot":""}